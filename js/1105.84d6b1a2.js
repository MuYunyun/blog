(self.webpackChunkblog=self.webpackChunkblog||[]).push([[1105],{81105:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>d});var r=t(59713),a=t.n(r),s=t(6479),p=t.n(s),l=(t(67294),t(3905));function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a()(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}var u={};function d(e){var n=e.components,t=p()(e,["components"]);return(0,l.kt)("wrapper",c(c(c({},u),t),{},{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h3",null,"什么是 code-server"),(0,l.kt)("p",null,"可以通过端口访问在线的 vscode，从而实现远程编程(比如在 ipad 编程)。"),(0,l.kt)("h3",null,"树莓派上部署 code-server"),(0,l.kt)("p",null,"参考 ",(0,l.kt)("a",c({parentName:"p"},{href:"https://coder.com/docs/code-server/latest/install#raspberry-pi"}),"code-server 官网"),"描述，其推荐使用 ",(0,l.kt)("a",c({parentName:"p"},{href:"https://coder.com/docs/code-server/latest/install#yarn-npm"}),"yarn 的方式"),"来安装。"),(0,l.kt)("p",null,(0,l.kt)("a",c({parentName:"p"},{href:"https://github.com/cdr/code-server/blob/main/docs/npm.md"}),"前置安装"),"，node.js 版本需要与所下载的 VSCode's Electron 一致。"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"笔者下载的 code-server 版本为 code-server_3.12.0_arm64.deb，其需要 node.js 14.x 版本。")),(0,l.kt)("pre",null,(0,l.kt)("code",c({parentName:"pre"},{className:"language-bash"}),"sudo apt-get install -y \\\n  build-essential \\\n  pkg-config \\\n  python3\nnpm config set python python3\n")),(0,l.kt)("p",null,"执行如下命令，安装 yarn。参考 ",(0,l.kt)("a",c({parentName:"p"},{href:"https://yarn.bootcss.com/docs/install/#debian-stable"}),"Debian / Ubuntu 安装")),(0,l.kt)("pre",null,(0,l.kt)("code",c({parentName:"pre"},{className:"language-bash"}),'curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\necho "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list\nsudo apt update && sudo apt install yarn\n\nyarn --version // 1.22.15\n')),(0,l.kt)("p",null,"执行 ",(0,l.kt)("inlineCode",{parentName:"p"},"sudo vim .bashrc")," 编辑 bashrc，写入 yarn 全局安装命令的执行路径。"),(0,l.kt)("pre",null,(0,l.kt)("code",c({parentName:"pre"},{className:"language-bash"}),'export PATH="$PATH:`yarn global bin`"\nsource ~/.bashrc # 使之生效\n')),(0,l.kt)("p",null,(0,l.kt)("a",c({parentName:"p"},{href:"https://coder.com/docs/code-server/latest/npm#installing"}),"安装 code-server"),"，执行如下命令:"),(0,l.kt)("pre",null,(0,l.kt)("code",c({parentName:"pre"},{className:"language-bash"}),"yarn global add code-server\ncode-server --version # 3.12.0\n")),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"笔者使用 npm install -g code-server 安装，无法成功。最终使用 yarn global add code-server 安装成功。")),(0,l.kt)("p",null,"编辑 ",(0,l.kt)("inlineCode",{parentName:"p"},".config/code-server/config.yaml")),(0,l.kt)("pre",null,(0,l.kt)("code",c({parentName:"pre"},{className:"language-bash"}),"sudo vim .config/code-server/config.yaml\n")),(0,l.kt)("pre",null,(0,l.kt)("code",c({parentName:"pre"},{className:"language-bash"}),"bind-addr: 127.0.0.1:5555\nauth: password\npassword: xxxxxxxxx\ncert: false\n")),(0,l.kt)("pre",null,(0,l.kt)("code",c({parentName:"pre"},{className:"language-bash"}),"# 启动 code server\ncode-server\n")),(0,l.kt)("p",null,"在 ",(0,l.kt)("inlineCode",{parentName:"p"},"frpc.ini")," 中添加以下配置:"),(0,l.kt)("pre",null,(0,l.kt)("code",c({parentName:"pre"},{className:"language-bash"}),"[vscode-server-frp-muyunyun-cn-5555]\ntype = tcp\nlocal_ip = 127.0.0.1\nlocal_port = 5555\nremote_port = 5555\n")),(0,l.kt)("p",null,"重启 frpc 服务:"),(0,l.kt)("pre",null,(0,l.kt)("code",c({parentName:"pre"},{className:"language-bash"}),"cd /opt/frp_0.37.0_linux_arm64\npm2 restart start_frpc.sh\n")),(0,l.kt)("p",null,"此时在 frps 服务器端(云主机)中通过 ",(0,l.kt)("inlineCode",{parentName:"p"},"lsof -i:5555")," 可以看到服务端端口 5555 已经被 frps 服务占据。"),(0,l.kt)("p",null,(0,l.kt)("img",c({parentName:"p"},{src:"http://with.muyunyun.cn/c4987da142cbc4b261b6b333df5d490b.jpg",alt:null}))),(0,l.kt)("p",null,"同时在公网中可以看到 code server 服务已成功运行"),(0,l.kt)("p",null,(0,l.kt)("img",c({parentName:"p"},{src:"http://with.muyunyun.cn/9f5f9fa5cd5c1510695ca492e939c255.jpg",alt:null}))),(0,l.kt)("p",null,"使用 pm2 守护运行 vscode server 服务以让相关服务能自动重启(比如断电重启系统后):"),(0,l.kt)("pre",null,(0,l.kt)("code",c({parentName:"pre"},{className:"language-bash"}),'cd /opt/frp_0.37.0_linux_arm64\nsudo touch start_code_server.sh\nsudo chmod 777 start_code_server.sh\nsudo echo "code-server" > start_code_server.sh\npm2 start /opt/frp_0.37.0_linux_arm64/start_code_server.sh\npm2 save\n')),(0,l.kt)("p",null,"笔者在域名解析处新增 code 主机记录以语义化访问 code server 服务，此时访问 ",(0,l.kt)("a",c({parentName:"p"},{href:"http://code.muyunyun.cn:5555"}),"http://code.muyunyun.cn:5555")," 与访问 ",(0,l.kt)("a",c({parentName:"p"},{href:"http://frp.muyunyun.cn:5555"}),"http://frp.muyunyun.cn:5555")," 效果是相同的。"),(0,l.kt)("p",null,(0,l.kt)("img",c({parentName:"p"},{src:"http://with.muyunyun.cn/b0afbe6f729762ce8e50a00624c3e11a.jpg-400",alt:null}))),(0,l.kt)("h3",null,"支持 Https 协议访问"),(0,l.kt)("p",null,"由于没有支持 Https，code-server 中的剪切板、插件等功能都不能解锁，同时控制台报了与 service work 相关的报错(参考 ",(0,l.kt)("a",c({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers#setting_up_to_play_with_service_workers"}),"Setting up to play with service workers"),", service work 必须依赖 https)。"),(0,l.kt)("p",null,(0,l.kt)("img",c({parentName:"p"},{src:"http://with.muyunyun.cn/580bab3470fb6535fae23530db223a94.jpg-400",alt:null}))),(0,l.kt)("p",null,"因此在 code-server 服务完全可用之前，需要支持 Https 协议，读者可以参考 ",(0,l.kt)("a",c({parentName:"p"},{href:"https://muyunyun.cn/blog/mx5pvgl1"}),"HTTPS 域名配置")," 一节，其介绍了给域名获取免费的 Https 证书并让 Https 生效的过程。"),(0,l.kt)("h3",null,"支持在 Https 协议中访问 Web Socket"),(0,l.kt)("p",null,"在配置完 HTTPS 服务后，访问相关链接还是无法使用，因为 code-server 是基于 Web Socket 来保持长连接的，因此还需要在 nginx 对 websocket 的流量作相关的配置。"),(0,l.kt)("p",null,"执行 ",(0,l.kt)("inlineCode",{parentName:"p"},"vim /etc/nginx/conf.d/www.muyunyun.cn.conf"),"，完整配置如下:"),(0,l.kt)("pre",null,(0,l.kt)("code",c({parentName:"pre"},{className:"language-bash"}),'map $http_upgrade $connection_upgrade {\n        default upgrade;\n        \'\' close;\n}\n\nupstream code_muyunyun_cn {\n  server 127.0.0.1:5555;\n}\n\nserver {\n    server_name      code.muyunyun.cn;\n    listen           80;\n    listen           [::]:80;\n    rewrite ^(.*)$ https://$host$1 permanent;\n\n    error_page 404 /404.html;\n        location = /40x.html {\n    }\n\n    error_page 500 502 503 504 /50x.html;\n        location = /50x.html {\n    }\n}\n\nserver {\n    listen       443 ssl http2;\n    listen       [::]:443 ssl http2;\n    server_name  code.muyunyun.cn;\n    root         /usr/share/nginx/html/code.muyunyun.cn;\n\n    location / {\n        proxy_pass http://code_muyunyun_cn;\n        proxy_set_header Host $host:443;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        # support websocket\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection $connection_upgrade;\n    }\n\n    ssl_certificate "/etc/nginx/ssl/code.muyunyun.cn/fullchain.cer";\n    ssl_certificate_key "/etc/nginx/ssl/code.muyunyun.cn/code.muyunyun.cn.key";\n    ssl_session_cache shared:SSL:1m;\n    ssl_session_timeout  10m;\n    ssl_ciphers HIGH:!aNULL:!MD5;\n    ssl_prefer_server_ciphers on;\n\n    # Load configuration files for the default server block.\n    include /etc/nginx/default.d/*.conf;\n\n    error_page 404 /404.html;\n        location = /40x.html {\n    }\n\n    error_page 500 502 503 504 /50x.html;\n        location = /50x.html {\n    }\n}\n')),(0,l.kt)("p",null,"此时实现了在公网中使用使用 https 访问 code-server。"),(0,l.kt)("p",null,(0,l.kt)("img",c({parentName:"p"},{src:"http://with.muyunyun.cn/c8b78a74fccd162ef97ecd2b53da09f4.jpg-400",alt:null}))),(0,l.kt)("h3",null,"给项目添加写入权限"),(0,l.kt)("pre",null,(0,l.kt)("code",c({parentName:"pre"},{className:"language-bash"}),"chown -R ubuntu /home/project/blog\n")),(0,l.kt)("h3",null,"code-server 同步 ssh"),(0,l.kt)("p",null,"登入树莓派端，输入"),(0,l.kt)("pre",null,(0,l.kt)("code",c({parentName:"pre"},{className:"language-bash"}),'ssh-keygen -C "your email" -f ~/.ssh/github\n')),(0,l.kt)("p",null,"将 ~/.ssh/github.pub 公钥中的内容复制到剪贴板，拷贝到 ",(0,l.kt)("a",c({parentName:"p"},{href:"https://github.com/settings/keys"}),"GitHub ssh")," 的 Key 文本框中。"),(0,l.kt)("p",null,"执行以下命令测试是否认证成功"),(0,l.kt)("pre",null,(0,l.kt)("code",c({parentName:"pre"},{className:"language-bash"}),"ssh -T git@github.com\n\n# Hi github! You've successfully authenticated, but GitHub does not provide shell access.\n")))}d.isMDXComponent=!0}}]);