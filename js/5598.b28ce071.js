(self.webpackChunkblog=self.webpackChunkblog||[]).push([[5598],{75598:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>d});var r=t(59713),s=t.n(r),o=t(6479),a=t.n(o),c=(t(67294),t(3905));function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function u(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){s()(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}var p={};function d(e){var n=e.components,t=a()(e,["components"]);return(0,c.kt)("wrapper",u(u(u({},p),t),{},{components:n,mdxType:"MDXLayout"}),(0,c.kt)("h3",null,"安装 Docker"),(0,c.kt)("pre",null,(0,c.kt)("code",u({parentName:"pre"},{className:"language-bash"}),'sudo apt update\n\nsudo apt install \\\n  apt-transport-https \\\n  ca-certificates \\\n  curl \\\n  gnupg \\\n  lsb-release -y\n\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg\n\necho \\\n  "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \\\n  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null\n\nsudo apt update\n\nsudo apt install docker-ce=5:20.10.8~3-0~ubuntu-focal docker-ce-cli=5:20.10.9~3-0~ubuntu-focal containerd.io=1.4.11-1 -y\n')),(0,c.kt)("h3",null,"安装 Docker Compose"),(0,c.kt)("pre",null,(0,c.kt)("code",u({parentName:"pre"},{className:"language-bash"}),"# 在本机的 host 文件中添加 github 相关 ip 地址，遇到 `curl: (7) Failed to connect to raw.githubusercontent.com port 443` 问题，参考 https://github.com/hawtim/blog/issues/10\nsudo vim /etc/hosts\n\n# 使 dns 改动生效\nsudo systemctl restart systemd-resolved\n")),(0,c.kt)("pre",null,(0,c.kt)("code",u({parentName:"pre"},{className:"language-bash"}),"sudo curl -L --fail https://raw.githubusercontent.com/linuxserver/docker-docker-compose/master/run.sh -o /usr/local/bin/docker-compose\nsudo chmod +x /usr/local/bin/docker-compose\nsudo docker-compose --version\n")),(0,c.kt)("h3",null,"获取 docker-compose.yml"),(0,c.kt)("pre",null,(0,c.kt)("code",u({parentName:"pre"},{className:"language-bash"}),"cd /opt/\nsudo mkdir rsshub\nsudo chmod 777 -R rsshub\ncd /opt/rsshub\nwget https://raw.githubusercontent.com/DIYgod/RSSHub/master/docker-compose.yml\n")),(0,c.kt)("p",null,"docker-compose.yml 内的内容为:"),(0,c.kt)("pre",null,(0,c.kt)("code",u({parentName:"pre"},{className:"language-bash"}),"version: '3'\n\nservices:\n    rsshub:\n        image: diygod/rsshub\n        restart: always\n        ports:\n            - '1200:1200'\n        environment:\n            NODE_ENV: production\n            CACHE_TYPE: redis\n            REDIS_URL: 'redis://redis:6379/'\n            PUPPETEER_WS_ENDPOINT: 'ws://browserless:3000'\n        depends_on:\n            - redis\n            - browserless\n\n    browserless:\n        # See issue 6680\n        image: browserless/chrome:1.43-chrome-stable\n        restart: always\n        ulimits:\n          core:\n            hard: 0\n            soft: 0\n\n    redis:\n        image: redis:alpine\n        restart: always\n        volumes:\n            - redis-data:/data\n\nvolumes:\n    redis-data:\n")),(0,c.kt)("p",null,"从配置信息中我们可以看出，服务端口为 1200。"),(0,c.kt)("h3",null,"创建 volume 持久化 Redis 缓存"),(0,c.kt)("pre",null,(0,c.kt)("code",u({parentName:"pre"},{className:"language-bash"}),"sudo docker volume create redis-data\n")),(0,c.kt)("h3",null,"启动 RSShub"),(0,c.kt)("pre",null,(0,c.kt)("code",u({parentName:"pre"},{className:"language-bash"}),"cd /opt/rsshub\nsudo docker-compose up -d\n")),(0,c.kt)("p",null,(0,c.kt)("img",u({parentName:"p"},{src:"http://with.muyunyun.cn/ca92893197e45c4753eab1f72bfc9abb.jpg",alt:null}))),(0,c.kt)("p",null,"访问本地树莓派 ip 的 1200 端口，可以看到 RSS 已经启动在 1200 端口上了。"),(0,c.kt)("p",null,"在 frpc.ini 中添加以下配置:"),(0,c.kt)("pre",null,(0,c.kt)("code",u({parentName:"pre"},{className:"language-bash"}),"[rsshub-frp-v2fy-com-1200]\ntype = tcp\nlocal_ip = 127.0.0.1\nlocal_port = 1200\nremote_port = 1200\n")),(0,c.kt)("p",null,"重启 frpc。"),(0,c.kt)("p",null,(0,c.kt)("img",u({parentName:"p"},{src:"http://with.muyunyun.cn/99cc2f01fb172287d2a758e88c3fd9f2.jpg",alt:null}))),(0,c.kt)("h3",null,"link"),(0,c.kt)("p",null,(0,c.kt)("a",u({parentName:"p"},{href:"https://www.v2fy.com/p/2021-10-05-pi-bt-aria2-pro-1633436631000/"}),"https://www.v2fy.com/p/2021-10-05-pi-bt-aria2-pro-1633436631000/")))}d.isMDXComponent=!0}}]);