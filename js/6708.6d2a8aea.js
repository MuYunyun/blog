(self.webpackChunkblog=self.webpackChunkblog||[]).push([[6708],{16708:(n,t,e)=>{"use strict";e.r(t),e.d(t,{default:()=>s});var r=e(59713),l=e.n(r),a=e(6479),u=e.n(a),p=(e(67294),e(3905));function i(n,t){var e=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),e.push.apply(e,r)}return e}function m(n){for(var t=1;t<arguments.length;t++){var e=null!=arguments[t]?arguments[t]:{};t%2?i(Object(e),!0).forEach((function(t){l()(n,t,e[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(e)):i(Object(e)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(e,t))}))}return n}var o={};function s(n){var t=n.components,e=u()(n,["components"]);return(0,p.kt)("wrapper",m(m(m({},o),e),{},{components:t,mdxType:"MDXLayout"}),(0,p.kt)("h3",null,"Title"),(0,p.kt)("p",null,"给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那两个整数，并返回他们的数组下标。"),(0,p.kt)("p",null,"你可以假设每种输入只会",(0,p.kt)("inlineCode",{parentName:"p"},"对应一个答案"),"。但是，你不能重复利用这个数组中同样的元素。"),(0,p.kt)("p",null,"示例:"),(0,p.kt)("pre",null,(0,p.kt)("code",m({parentName:"pre"},{className:"language-js"}),"给定 nums = [2, 7, 11, 15], target = 9\n")),(0,p.kt)("p",null,"因为 nums","[0]"," + nums","[1]"," = 2 + 7 = 9\n所以返回 ","[0, 1]"),(0,p.kt)("h3",null,"Analyze"),(0,p.kt)("p",null,"题解 1: 暴力法"),(0,p.kt)("pre",null,(0,p.kt)("code",m({parentName:"pre"},{className:"language-js"}),"var twoSum = function(nums, target) {\n  var length = nums.length\n  for (var x = 0; x < length; x++) {\n    for (var y = x + 1; y < length; y++) {\n      if (nums[x] + nums[y] === target) {\n        var arr = []\n        arr.push(x)\n        arr.push(y)\n        return arr\n      }\n    }\n  }\n}\n")),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"时间复杂度: O(n^2)"),(0,p.kt)("li",{parentName:"ul"},"空间复杂度: O(1)")),(0,p.kt)("p",null,"题解 2-1: 哈希表"),(0,p.kt)("p",null,"思路:"),(0,p.kt)("blockquote",null,(0,p.kt)("p",{parentName:"blockquote"},"需要留意的是, 如果数组中有重复的值比如 ","[5, 5]",", target = 10 这种情况的处理")),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"遍历一次数组, 查询当前",(0,p.kt)("inlineCode",{parentName:"li"},"哈希表"),"中是否有和当前索引值 ",(0,p.kt)("inlineCode",{parentName:"li"},"nums[i]")," 对应的匹配值 ",(0,p.kt)("inlineCode",{parentName:"li"},"target - nums[i]"),";",(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"若有, 则返回它们两个值的索引;"),(0,p.kt)("li",{parentName:"ul"},"若没有, 则将当前索引值和下标存入哈希表中;")))),(0,p.kt)("pre",null,(0,p.kt)("code",m({parentName:"pre"},{className:"language-js"}),"var twoSum = function(nums, target) {\n  let numsObj = {}\n  for (let i = 0; i < nums.length; i++) {\n    let current = nums[i]\n    let match = target - current\n    if (match in numsObj) {\n      return [i, numsObj[match]]\n    }\n    numsObj[current] = i\n  }\n}\n")),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"时间复杂度: O(n)"),(0,p.kt)("li",{parentName:"ul"},"空间复杂度: O(n)")),(0,p.kt)("p",null,"题解 2-2: 使用 Map, 思路同哈希表"),(0,p.kt)("pre",null,(0,p.kt)("code",m({parentName:"pre"},{className:"language-js"}),"var twoSum = function(nums, target) {\n  var map = new Map()\n\n  for (let i = 0; i < nums.length; i++) {\n    const targetValue = target - nums[i]\n    const getTargetValue = map.get(targetValue)\n    if (typeof(getTargetValue) === 'number') {\n      return [i, getTargetValue]\n    }\n    map.set(nums[i], i)\n  }\n}\n")),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"时间复杂度: O(n)"),(0,p.kt)("li",{parentName:"ul"},"空间复杂度: O(n)")),(0,p.kt)("h3",null,"Sister Title"),(0,p.kt)("p",null,"15、16、18"))}s.isMDXComponent=!0}}]);