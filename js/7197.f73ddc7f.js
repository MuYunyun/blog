(self.webpackChunkblog=self.webpackChunkblog||[]).push([[7197],{57197:(t,e,n)=>{"use strict";n.r(e),n.d(e,{default:()=>i});var r=n(59713),a=n.n(r),o=n(6479),c=n.n(o),s=(n(67294),n(3905));function u(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function l(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?u(Object(n),!0).forEach((function(e){a()(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):u(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}var p={};function i(t){var e=t.components,n=c()(t,["components"]);return(0,s.kt)("wrapper",l(l(l({},p),n),{},{components:e,mdxType:"MDXLayout"}),(0,s.kt)("h3",null,"Redux 的简易实现"),(0,s.kt)("pre",null,(0,s.kt)("code",l({parentName:"pre"},{className:"language-js"}),"function createStore(reducer, initialState) {\n  let state = initialState\n  const eventList = []\n\n  function getState() {\n    return state\n  }\n\n  function dispatch(action) {\n    state = reducer(state, action)\n    eventList.map(r => r(state))\n  }\n\n  function subscribe(event) {\n    eventList.push(event)\n  }\n\n  return {\n    getState,\n    subscribe,\n    dispatch,\n  }\n}\n")),(0,s.kt)("p",null,"测试用例"),(0,s.kt)("pre",null,(0,s.kt)("code",l({parentName:"pre"},{className:"language-js"}),"const reducer = function(state, action) {\n  switch (action.type) {\n    case 'update':\n      return action.payload\n      break\n    case 'update1':\n      return {\n        ...state,\n        a: action.payload,\n      }\n      break\n    default:\n      return state\n  }\n}\n\nconst store = createStore(reducer, {a: 1, b: 2})\n\nstore.subscribe((state) => { console.log(state) })\n\nstore.dispatch({ type: 'update', payload: { a: 1, b: 2 }}) // { a: 1, b: 2 }\nstore.dispatch({ type: 'update1', payload: 3 }) // { a: 3, b: 2 }\nconsole.log(store.getState()) // { a: 3, b: 2 }\n")),(0,s.kt)("h3",null,"Redux 与 Mobx 适用场景"),(0,s.kt)("h4",null,"redux"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"store - view - action 的闭环"),(0,s.kt)("li",{parentName:"ul"},"Redux 颗粒度更细, 相对更安全")),(0,s.kt)("h4",null,"mobx"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"store - view 的闭环"),(0,s.kt)("li",{parentName:"ul"},"使用了类双向绑定的思维")))}i.isMDXComponent=!0}}]);