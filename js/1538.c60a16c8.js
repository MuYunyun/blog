(self.webpackChunkblog=self.webpackChunkblog||[]).push([[1538],{81538:n=>{n.exports="### Lottie\n\n* 针对营销动画场景, 业界用的较多的是使用 Lottie 来开发。\n  * 优点\n    * AE 香\n    * 还原度高\n  * 缺点\n    * 不支持动态数据\n    * 沟通、适配成本\n    * 低端机性能问题\n    * 官方文档匮乏\n* 使用 css 来完成营销动效的效果(比如光影、滤镜效果)不会很好。\n* 支付宝营销动效方案:\n  * 在线制作 -> 发布优化 -> 播放 JSON\n  * 类 lottie 方案, 提供网页 ae, https://render.alipay.com/p/s/mars-editor/, 转化为 WebGl\n* [网易云音乐年度报告从设计到代码](https://zhuanlan.zhihu.com/p/57576659)。\n\n### 场景\n\n* 直播: 手势拜年特效\n* 素材属性编辑\n* 内容平台操作\n\n### 实时动画\n\n* 还原度\n  * 还原曲线描点等数据\n  * 不同平台的渲染差异\n* 性能\n  * Mars Player: https://render.alipay.com/p/s/mars-editor/\n    * 图层、粒子、拖尾、模型、交互\n    * WebGl\n  * Oasis 3d(蚂蚁): https://oasis-engine.github.io/ 动画引擎、Hilo 3d(淘宝 开源)\n  * 小程序、H5、Web3D 游戏\n* 稳定性\n\n### Lottie 库使用\n\nlottie-web gzip 压缩后大小有 40kb 的大小。如果使用 npm 包的形式进行加载, 那么 vendor.js 会增加 40kb 的大小, 这样会使页面性能下降。\n\n* 方案一: 采用 script 标签的形式来加载 lottie 文件, 并且使用 defer 或 async 属性来进行异步加载。一般情况下, 我们只需要 svg 格式的动画, 所以可以使用 lottie_light 版本（仅支持 svg 渲染）。\n* 方案二: 因为 lottie 目前只在商家年度之夜中使用, 因此在特定路由中进行按需引入加载。\n\n#### JSON 文件\n\n通过 bodymovin 插件导出的动画 JSON 文件大小也可能比较大(复杂的动画达到上百 kb), 所以不建议将 JSON 数据内联到页面中, 而最好是当做一个 JSON 文件来进行下载。\n\n#### lottie-web 的基本用法\n\n```js\nconst animation = bodymovin.loadAnimation({\n  container: element,    // 要包含该动画的dom元素\n  renderer: 'svg',       // 渲染方式, svg、canvas、html（轻量版仅svg渲染）\n  loop: true,            // 是否循环播放\n  autoplay: true,        // 是否自动播放\n  animationData,         // 动画 JSON 文件(优先级比 path 高)\n  path: animateJsonPath, // 动画 JSON 文件路径\n});\n```\n\n#### lottie-web 常用方法\n\nlottie-web 提供了很多的控制动画播放的方法, 下面是一些常用的方法。animation 等于上面代码中的 animation。\n\n```js\nanimation.play(); // 播放该动画, 从目前停止的帧开始播放\nanimation.stop(); // 停止播放该动画, 回到第 0 帧\nanimation.pause(); // 暂停该动画, 在当前帧停止并保持\nanimation.goToAndStop(value, isFrame); // 跳到某个时刻/帧并停止。isFrame(默认false) 指示 value 表示帧还是时间(毫秒)\nanimation.goToAndPlay(value, isFrame); // 跳到某个时刻/帧并进行播放\nanimation.goToAndStop(30, true); // 跳转到第 30 帧并停止\nanimation.goToAndPlay(300); // 跳转到第 300 毫秒并播放\nanimation.playSegments(arr, forceFlag); // arr 可以包含两个数字或者两个数字组成的数组, forceFlag 表示是否立即强制播放该片段\nanimation.playSegments([10,20], false); // 播放完之前的片段, 播放 10-20 帧\nanimation.playSegments([[0,5],[10,18]], true); // 直接播放 0-5 帧和 10-18 帧\nanimation.setSpeed(speed); // 设置播放速度, speed为 1 表示正常速度\nanimation.setDirection(direction); // 设置播放方向, 1 表示正向播放, -1 表示反向播放\nanimation.destroy(); // 删除该动画, 移除相应的元素标签等。在unmount的时候, 需要调用该方法\n```\n\n#### lottie-web 常用的事件\n\nlottie-web 中可能也需要监听一些事件, 比如加载完动画 JSON 文件时的 data_ready 事件。监听方法如下:\n\n```js\nanimation.addEventListener('data_ready', () => {\n  console.log('animation data has loaded');\n});\n```\n\n除了 `data_ready` 事件, 下面还有一些其他常用的事件可以监听:\n\n* complete: 播放完成（循环播放下不会触发）\n* loopComplete: 当前循环下播放（循环播放/非循环播放）结束时触发\n* enterFrame: 每进入一帧就会触发, 播放时每一帧都会触发一次, stop 方法也会触发\n* segmentStart: 播放指定片段时触发\n* playSegments、resetSegments 等方法刚开始播放指定片段时会发出, 如果 playSegments 播放多个片段, 多个片段最开始都会触发。\n* data_ready: 动画 JSON 文件加载完毕触发\n* DOMLoaded: 动画相关的 dom 已经被添加到 html 后触发\n* destroy: 将在动画删除时触发\n\n#### lottie-web 部分高阶用法\n\n1. 在制作 AE 动画时, 将图层命名为 #svgId 格式, 前端加载该动画后, 相应的图层的 id 会被设置为 svgId, 可以通过 dom 方法获取该元素并做相应的操作;\n2. 在制作 AE 动画时, 将图层命名为 .svgClass 格式, 前端加载该动画后, 相应的图层的 class 会被设置为 svgClass, 可以通过 dom 方法获取这些元素并做相应的操作;\n\n### 相关链接\n\n* [lottie 动效社区资源](https://lottiefiles.com/featured)\n* [现在你可以把 Lottie 动画导回 AE 了](https://zhuanlan.zhihu.com/p/104751997)\n  * 经验证, 简单的动效可以, 复杂的不行。\n- [ ] [剖析 lottie-web 动画实现原理](https://juejin.cn/post/6914835547588395022)\n- [ ] [使用 Lottie 快速开发动画](https://jelly.jd.com/article/5fcf44b5a1c4e30142d0a472)\n"}}]);