(self.webpackChunkblog=self.webpackChunkblog||[]).push([[627],{50627:n=>{n.exports='### title\n\n报数序列是指一个整数序列, 按照其中的整数的顺序进行报数, 得到下一个数。其前五项如下:\n\n```\n1.     1\n2.     11\n3.     21\n4.     1211\n5.     111221\n```\n\n1 被读作  "one 1"  ("一个一") , 即 11。\n11 被读作 "two 1s" ("两个一"）, 即 21。\n21 被读作 "one 2",  "one 1" （"一个二" ,  "一个一") , 即 1211。\n\n给定一个正整数 n , 输出报数序列的第 n 项。\n\n注意: 整数顺序将表示为一个字符串。\n\n示例 1:\n\n```\n输入: 1\n输出: "1"\n```\n\n示例 2:\n\n```\n输入: 4\n输出: "1211"\n```\n\n### analyze\n\n题目被吐槽啊, 看 [Look-and-Say Sequence](https://www.geeksforgeeks.org/look-and-say-sequence/) 比较容易理解题意。用递归的思路解题。\n\n```js\nconst cacheObj = {1: \'1\'}\n/**\n * @param {number} n\n * @return {string}\n */\nvar countAndSay = function (n) { // 5\n  if (cacheObj[n]) {\n    return cacheObj[n]\n  } else {\n    const findValue = countAndSay(n - 1) // 1211\n    let str = \'\'\n    let tmp = 0 // 截断不同数字的下标\n    for (let i = 0; i < findValue.length; i++) {\n      if (findValue[i] !== findValue[i + 1]) {\n        str += i - tmp + 1\n        str += findValue[i]\n        tmp = i + 1\n      }\n    }\n    cacheObj[n] = str\n    return str\n  }\n};\n```'}}]);