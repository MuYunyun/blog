(self.webpackChunkblog=self.webpackChunkblog||[]).push([[2455],{52455:e=>{e.exports="### INHERITED AND NON-INHERITED IN CSS\n\nWhen I look up css properties in MDN's specifications section, there are some properties in it and it seems unfamiliar to me. So I try to find out some of them today.\n\n![](http://with.muyunyun.cn/b22bcdb94d354d3f301cae7997d9cd17.jpg)\n\nThe follow list try to give one word to specify the meaning of them.\n\n* Initial value: Specify the CSS property's default value;\n* Applies to: Specify which elements to apply to;\n* Inherited: Specify the CSS property is inherited or non-inherited;\n* [Media](https://www.w3.org/TR/css3-mediaqueries/): Specify how a document is to be presented on different media;\n* [Computed value](https://developer.mozilla.org/en-US/docs/Web/CSS/computed_value): The CSS property that is transferred from parent to child;\n* [Animation type](https://drafts.csswg.org/web-animations/#animation-type)\n* [Canonical order](https://developer.mozilla.org/en-US/docs/Glossary/Canonical_order): Some CSS properties(font、background...) have their own CSS property value order.\n\nAnd this article is to discuss the topic about the knowledge of inherited and non-inherited.\n\n### Initial value between inherited and non-inherited\n\nThe initial value of a CSS property is its default value.\n\nThe Initial value has two different behavior between `inherited properties` and `non-inherited properties`.\n\nFor `inherited properties`, the initial value is `used on the root element only`.\n\n```html\n<span style=\"color: red\">\n  hello, <em>CSS</em>\n</span>\n```\n\nThe result is the color of both `span` and `em` element are red. Because the color is an inherited property, the element will get the color property from the parent recursively until to document.\n\nFor `non-inherited properties`, the initial value is `used on every element`. When no value for a non-inherited property has been specified on an element, the element gets the initial value directly.\n\n```html\n<span style=\"border: 1px solid black\">\n  hello, <em>CSS</em>\n</span>\n```\n\nThe result is the border is only effected on `span` element, not `em`. Because the border is a non-inherited property, and there is no border property specified on the em, so the em get the border's initial value `none`.\n\nIt mentioned much times about inherited value and non-inherited value above, and now we sort out css properties.\n\n### Inherited Type\n\nI've collected some inherited types in css, they are listed as follow:\n\n* `Font Type`: font-style、font-variant、font-weight、font-stretch、font-size、font-family、color、line-height;\n* `Space Type`: letter-spacing、word-spacing、white-space;\n* `Letter Type`: text-align、text-indent、text-shadow、text-transform;\n* `List Type`: list-style、list-style-type、list-style-position;\n* `Others`: visibility、cursor;\n\n### Non-Inherited Type\n\nIn the opposite of inherited type, the non-inherited types are listed as follow:\n\n* `Layout Type`: float、position、left、right、top、bottom、z-index、display\n* `Box Type`: width、max-width、min-width、height、max-height、min-height、margin、padding、border;\n* `Background Type`: background-size、background-image、background-clip、background-color、background-origin、background-position、background-repeat;\n* `Others`: overflow、text-overflow、vertical-align;\n\n### todo\n\n* inherit\n* initial\n* unset\n* revert\n\n### Recap\n\nThese section introduces the inherited concept in CSS, and distinguish some inherited type and some non-inherited type from css properties. Hope it's helpful for you."}}]);