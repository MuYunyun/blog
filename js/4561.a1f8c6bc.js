(self.webpackChunkblog=self.webpackChunkblog||[]).push([[4561],{44561:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>c});var r=t(59713),a=t.n(r),l=t(6479),s=t.n(l),o=(t(67294),t(3905));function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function p(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a()(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}var u={};function c(e){var n=e.components,t=s()(e,["components"]);return(0,o.kt)("wrapper",p(p(p({},u),t),{},{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h3",null,"题目"),(0,o.kt)("p",null,"给定一个字符串，验证它是否是",(0,o.kt)("inlineCode",{parentName:"p"},"回文串"),"，只考虑字母和数字字符，可以忽略字母的大小写。"),(0,o.kt)("p",null,"说明：本题中，我们将空字符串定义为有效的回文串。"),(0,o.kt)("p",null,"示例 1:"),(0,o.kt)("pre",null,(0,o.kt)("code",p({parentName:"pre"},{className:"language-js"}),'输入: "A man, a plan, a canal: Panama"\n输出: true\n')),(0,o.kt)("pre",null,(0,o.kt)("code",p({parentName:"pre"},{className:"language-js"}),'示例 2:\n\n输入: "race a car"\n输出: false\n')),(0,o.kt)("h3",null,"解题"),(0,o.kt)("p",null,"解法一: 对撞指针"),(0,o.kt)("pre",null,(0,o.kt)("code",p({parentName:"pre"},{className:"language-js"}),"/**\n * @param {string} s\n * @return {boolean}\n */\nvar isPalindrome = function(s) {\n  const sToLowerCase = s.toLowerCase()\n\n  let left = 0, right = s.length - 1\n  while (left <= right) {\n    if (isValidate(sToLowerCase[left]) && isValidate(sToLowerCase[right])) {\n      if (sToLowerCase[left] !== sToLowerCase[right]) {\n        return false\n      }\n      left++\n      right--\n    }\n    if (!isValidate(sToLowerCase[left])) {\n      left++\n    }\n    if (!isValidate(sToLowerCase[right])) {\n      right--\n    }\n  }\n\n  return true\n}\n\n/* 校验函数 */\nvar isValidate = (value) => {\n  return /[a-z]|[0-9]/.test(value)\n}\n")),(0,o.kt)("h3",null,"Sister Title"),(0,o.kt)("p",null,"167、344、345"))}c.isMDXComponent=!0}}]);