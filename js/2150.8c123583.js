(self.webpackChunkblog=self.webpackChunkblog||[]).push([[2150],{72150:(e,t,a)=>{"use strict";a.r(t),a.d(t,{default:()=>u});var n=a(59713),l=a.n(n),i=a(6479),r=a.n(i),p=(a(67294),a(3905));function N(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function m(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?N(Object(a),!0).forEach((function(t){l()(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):N(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}var k={};function u(e){var t=e.components,a=r()(e,["components"]);return(0,p.kt)("wrapper",m(m(m({},k),a),{},{components:t,mdxType:"MDXLayout"}),(0,p.kt)("h3",null,"关系型数据库"),(0,p.kt)("p",null,"使用多个表格管理的数据库。"),(0,p.kt)("h3",null,"创建数据库"),(0,p.kt)("pre",null,(0,p.kt)("code",m({parentName:"pre"},{className:"language-js"}),"CREATE DATABASE 数据库名;\n")),(0,p.kt)("h3",null,"删除数据库"),(0,p.kt)("pre",null,(0,p.kt)("code",m({parentName:"pre"},{className:"language-js"}),"DROP DATABASE 数据库名;\n")),(0,p.kt)("h3",null,"数据库类型"),(0,p.kt)("p",null,"数据库类型分为数字类型、时间类型、字符串类型。"),(0,p.kt)("table",null,(0,p.kt)("thead",{parentName:"table"},(0,p.kt)("tr",{parentName:"thead"},(0,p.kt)("th",m({parentName:"tr"},{align:"center"}),"类型"),(0,p.kt)("th",m({parentName:"tr"},{align:"center"}),"用途"),(0,p.kt)("th",m({parentName:"tr"},{align:"center"}),"格式"))),(0,p.kt)("tbody",{parentName:"table"},(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",m({parentName:"tr"},{align:"center"}),"INT(INEGER)"),(0,p.kt)("td",m({parentName:"tr"},{align:"center"}),"大整数值"),(0,p.kt)("td",m({parentName:"tr"},{align:"center"}))),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",m({parentName:"tr"},{align:"center"}),"FLOAT"),(0,p.kt)("td",m({parentName:"tr"},{align:"center"}),"单精度"),(0,p.kt)("td",m({parentName:"tr"},{align:"center"}))),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",m({parentName:"tr"},{align:"center"}),"DATE"),(0,p.kt)("td",m({parentName:"tr"},{align:"center"}),"日期值"),(0,p.kt)("td",m({parentName:"tr"},{align:"center"}),"'YYYY-MM-DD'")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",m({parentName:"tr"},{align:"center"}),"TIME"),(0,p.kt)("td",m({parentName:"tr"},{align:"center"}),"时间值或持续时间"),(0,p.kt)("td",m({parentName:"tr"},{align:"center"}),"'HH:MM:SS'")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",m({parentName:"tr"},{align:"center"}),"YEAR"),(0,p.kt)("td",m({parentName:"tr"},{align:"center"}),"年份值"),(0,p.kt)("td",m({parentName:"tr"},{align:"center"}),"'YYYY'")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",m({parentName:"tr"},{align:"center"}),"DATETIME"),(0,p.kt)("td",m({parentName:"tr"},{align:"center"}),"混合日期和时间值"),(0,p.kt)("td",m({parentName:"tr"},{align:"center"}),"'YYYY-MM-DD'")),(0,p.kt)("tr",{parentName:"tbody"},(0,p.kt)("td",m({parentName:"tr"},{align:"center"}),"VARCHAR"),(0,p.kt)("td",m({parentName:"tr"},{align:"center"}),"变长字符串"),(0,p.kt)("td",m({parentName:"tr"},{align:"center"}))))),(0,p.kt)("h3",null,"创建数据表"),(0,p.kt)("pre",null,(0,p.kt)("code",m({parentName:"pre"},{className:"language-js"}),"CREATE TABLE table_name (column_name column_type);\n")),(0,p.kt)("h3",null,"删除数据表"),(0,p.kt)("pre",null,(0,p.kt)("code",m({parentName:"pre"},{className:"language-js"}),"DROP TABLE table_name;\n")),(0,p.kt)("h3",null,"插入数据"),(0,p.kt)("pre",null,(0,p.kt)("code",m({parentName:"pre"},{className:"language-js"}),"INSERT INTO table_name ( field1, field2, ...fieldN ) VALUES ( value1, value2, ...valueN )\n")),(0,p.kt)("h3",null,"查询数据"),(0,p.kt)("pre",null,(0,p.kt)("code",m({parentName:"pre"},{className:"language-js"}),"SELECT field1,field2\nFROM table_name1, table_name2\n[WHERE condition1 [AND [OR]] condition2\n[GROUP BY]\n[HAVING]\n[ORDER BY]\n[LIMIT N][OFFSET M]\n")),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"FROM"),": 可以从多个 table 中进行查询"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"WHERE"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"WHERE 相当于编程语言中的 if。"),(0,p.kt)("li",{parentName:"ul"},"可以使用在 SELECT、UPDATE、DELETE 语句中。"),(0,p.kt)("li",{parentName:"ul"},"可以使用 AND 或者 OR 指定一个或多个条件。"),(0,p.kt)("li",{parentName:"ul"},"操作符有 ",(0,p.kt)("inlineCode",{parentName:"li"},"="),"、",(0,p.kt)("inlineCode",{parentName:"li"},">"),"、",(0,p.kt)("inlineCode",{parentName:"li"},"<"),"、",(0,p.kt)("inlineCode",{parentName:"li"},">="),"、",(0,p.kt)("inlineCode",{parentName:"li"},"<="),"、",(0,p.kt)("inlineCode",{parentName:"li"},"!= or <>"),"、",(0,p.kt)("inlineCode",{parentName:"li"},"IS NULL"),"、",(0,p.kt)("inlineCode",{parentName:"li"},"IS NOT NULL")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"Like"),": 类似于 ",(0,p.kt)("inlineCode",{parentName:"li"},"="),", SQL 提供了四种匹配方式。",(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"%"),": 表示任意 0 个或多个字符。可匹配任意类型和长度的字符, 有些情况下若是中文, 请使用两个百分号（%%）表示。",(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"eg: 查询包含 javascript 字段的信息: ",(0,p.kt)("inlineCode",{parentName:"li"},"SELECT * FROM position WHERE name LIKE '%java%';")))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"_"),": 表示任意单个字符。匹配单个任意字符, 它常用来限制表达式的字符长度语句。"),(0,p.kt)("li",{parentName:"ul"},"[]: 表示括号内所列字符中的一个（类似正则表达式）。指定一个字符、字符串或范围, 要求所匹配对象为它们中的任一个。"),(0,p.kt)("li",{parentName:"ul"},"[^]: 表示不在括号所列之内的单个字符。其取值和 [] 相同, 但它要求所匹配对象为指定字符以外的任一个字符。\n查询内容包含通配符时,由于通配符的缘故, 导致我们查询特殊字符 “%”、“_”、“[” 的语句无法正常实现, 而把特殊字符用 “","[ ]","” 括起便可正常查询。"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"REGEXP"),": 可以使用正则进行筛选。",(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"eg: ",(0,p.kt)("inlineCode",{parentName:"li"},"SELECT name FROM person_tbl WHERE name REGEXP '^st';")))))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"GROUP BY"),": 对 SELECT 查询出来的结果集按照某个字段或者表达式进行分组，获得一组组的集合。",(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"WITH ROLLUP"),": 可以实现在分组统计数据基础上再进行相同的统计 (SUM, AVG, COUNT 等)。",(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("img",m({parentName:"li"},{src:"http://with.muyunyun.cn/1d8a95a812f6ffc91d6f5a357fe9755c.jpg",alt:null}))))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"coalesce"),": 针对上图 null 处, 可以使用 coalesce(a,b,c) 语法, 其等价于 JavaScript 中 ",(0,p.kt)("inlineCode",{parentName:"li"},"a || b || c || null"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("img",m({parentName:"li"},{src:"http://with.muyunyun.cn/8530fc78779c7024f41053a51c160196.jpg",alt:null}))))))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"HAVING"),": 用于对 WHERE 和 GROUP BY 查询出来的分组经行过滤，查出满足条件的分组结果。(场景使用存疑: 后续有场景进行补充)"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"ORDER BY"),":",(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"可设置多个字段来排序: ",(0,p.kt)("inlineCode",{parentName:"li"},"ORDER BY field1 [ASC [DESC][默认 ASC]], [field2...] [ASC [DESC][默认 ASC]]"),";"),(0,p.kt)("li",{parentName:"ul"},"可设置 ",(0,p.kt)("inlineCode",{parentName:"li"},"ASD"),"(ascending) 或 ",(0,p.kt)("inlineCode",{parentName:"li"},"DESD"),"(descending) 来表示升序或降序, 默认 ascending。"),(0,p.kt)("li",{parentName:"ul"},"拼音场景: 如果字符集采用的是 utf8(万国码)而非 gbk，需要先对字段进行转为 gbk 码然后排序:",(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"ORDER BY CONVERT(title using gbk);")))))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"LIMIT"),": 可以设置查询返回条数"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"OFFSET"),": 可以设置起始查询条数"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"limit N,M"),": 相当于 LIMIT M OFFSET N , 从第 N 条记录开始, 返回 M 条记录")),(0,p.kt)("h3",null,"UPDATE"),(0,p.kt)("pre",null,(0,p.kt)("code",m({parentName:"pre"},{className:"language-js"}),"UPDATE table_name SET field1=new-value1, field2=new-value2\n[WHERE CLAUSE]\n")),(0,p.kt)("h3",null,"DELETE"),(0,p.kt)("pre",null,(0,p.kt)("code",m({parentName:"pre"},{className:"language-js"}),"DELETE FROM table_name\n[WHERE CLAUSE]\n")),(0,p.kt)("h3",null,"UNION"),(0,p.kt)("p",null,"UNION 操作符用于连接两个以上的 SELECT 语句的结果组合到一个结果集合中。"),(0,p.kt)("pre",null,(0,p.kt)("code",m({parentName:"pre"},{className:"language-js"}),"SELECT field1,field2\nFROM table_name1, table_name2\n[WHERE condition1 [AND [OR]] condition2\nUNION [ALL | DISTINCT]\n")),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"DISTINCT"),": 默认值, 表示多个 SELECT 语句会删除重复的数据。"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"All"),": 表示多个 SELECT 语句不会删除重复的数据。")),(0,p.kt)("h3",null,"连接的使用"),(0,p.kt)("p",null,"真正的应用中经常需要从多个数据表中读取数据。此时可以使用 JOIN 在两个或多个表中读取数据。"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"INNER JOIN (内连接)",(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("img",m({parentName:"li"},{src:"http://with.muyunyun.cn/b6fb7c5a37b37586b7c36f7b524294bd.jpg",alt:null}))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"SELECT field1,field2 FROM table_name1 INNER JOIN table_name2 ON condition;")))),(0,p.kt)("li",{parentName:"ul"},"LEFT JOIN (左连接)",(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("img",m({parentName:"li"},{src:"http://with.muyunyun.cn/52e7cfa17e2c2ff5983a2ba3c6f3eb8e.jpg",alt:null}))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"SELECT field1,field2 FROM table_name1 LEFT JOIN ttable_name2 ON condition;")))),(0,p.kt)("li",{parentName:"ul"},"RIGHT JOIN (右连接)",(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("img",m({parentName:"li"},{src:"http://with.muyunyun.cn/d79d96273e72c6c308ba8744b507f562.jpg",alt:null}))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"SELECT field1,field2 FROM table_name1 RIGHT JOIN table_name2 ON condition;"))))),(0,p.kt)("h3",null,"事务"),(0,p.kt)("p",null,"事务主要用于处理操作量大，复杂度高的数据。笔者认为事务就像数据库语句中引入 git 操作。"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"MySQL 中使用了 Innodb 引擎的数据库或表支持事务;"),(0,p.kt)("li",{parentName:"ul"},"事务用来管理 insert、update、delete 语句;")),(0,p.kt)("p",null,"MYSQL 事务控制语句"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"BEGIN: 开始一个事务"),(0,p.kt)("li",{parentName:"ul"},"ROLLBACK: 事务回滚"),(0,p.kt)("li",{parentName:"ul"},"COMMIT: 事务确认")),(0,p.kt)("h3",null,"ALTER"),(0,p.kt)("p",null,"修改表名或者修改表字段就要使用 ALTER 命令。"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"删除表字段",(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"DROP: ",(0,p.kt)("inlineCode",{parentName:"li"},"ALTER TABLE testalter_tbl DROP i;")))),(0,p.kt)("li",{parentName:"ul"},"添加表字段",(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"ADD: ",(0,p.kt)("inlineCode",{parentName:"li"},"ALTER TABLE testalter_tbl ADD i INT;")))),(0,p.kt)("li",{parentName:"ul"},"修改表字段类型及名称",(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"MODIFY: ",(0,p.kt)("inlineCode",{parentName:"li"},"alter table tableName modify name1 type1 first|after name2;"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"name1 为想要修改的字段"),(0,p.kt)("li",{parentName:"ul"},"type1 为该字段原来类型"),(0,p.kt)("li",{parentName:"ul"},"first 与 after 二选一, first 放在第一位, after 放在 name2 字段后面"))),(0,p.kt)("li",{parentName:"ul"},"CHANGE: ",(0,p.kt)("inlineCode",{parentName:"li"},"ALTER TABLE testalter_tbl CHANGE i j BIGINT;"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"将 i 字段重命名为 j 字段")))))),(0,p.kt)("h3",null,"索引"),(0,p.kt)("p",null,"空间换时间。使用索引可以加快数据库内部找寻数据的速度。"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"创建索引",(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"CREATE INDEX indexName ON table_name (column_name)")))),(0,p.kt)("li",{parentName:"ul"},"删除索引",(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"DROP INDEX [indexName] ON mytable;"))))),(0,p.kt)("h3",null,"SQL 注入"),(0,p.kt)("p",null,"线上应用应该注意防范 SQL 注入。"))}u.isMDXComponent=!0}}]);