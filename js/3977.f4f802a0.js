(self.webpackChunkblog=self.webpackChunkblog||[]).push([[3977],{3977:n=>{n.exports="### path 模块\n\n* `path.basename(path[, ext])`: 返回文件名。\n\n```js\npath.basename('/foo/bar/baz/asdf/quux.html')\n// Returns: 'quux.html'\n\npath.basename('/foo/bar/baz/asdf/quux.html', '.html')\n// Returns: 'quux'\n```\n\n* `path.dirname(path)`: 返回路径地址。\n\n```js\npath.dirname('/foo/bar/baz/asdf/quux')\n// Returns: '/foo/bar/baz/asdf'\n```\n\n* `path.exename(path)`: 如果最后一个 `.` 之前若有字符, 则返回 `.` 和后面的字符, 否则返回 ''。\n\n```js\npath.extname('index.html')\n// Returns: '.html'\n\npath.extname('index.coffee.md')\n// Returns: '.md'\n\npath.extname('index.')\n// Returns: '.'\n\npath.extname('index')\n// Returns: ''\n\npath.extname('.index')\n// Returns: ''\n\npath.extname('.index.md')\n// Returns: '.md'\n```\n\n* `path.join()`: 将传入的参数进行合并。\n\n```js\npath.join('/foo', 'bar', 'baz/asdf', 'quux', '..')\n// Returns: '/foo/bar/baz/asdf'\n```\n\n* `path.resolve()`: 返回绝对路径(绝对路径以 `/` 开头), 注意该 api 遵循`从右向左最小匹配`原则。\n\n```js\npath.resolve('/foo', '/bar', 'baz')\n// 根据从右向左匹配原则, /bar 与 baz 组成了绝对路径, 所以返回的结果是 /bar/baz\n\npath.resolve('wwwroot', 'static_files/png/', '../gif/image.gif');\n// If the current working directory is /home/myself/node,\n// this returns '/home/myself/node/wwwroot/static_files/gif/image.gif'\n```\n\n* `path.relative(from, to)`: 返回相对路径, 其为 `to 路径`相对 `from 路径`的差值。\n\n```js\npath.relative('/data/orandea/test/aaa', '/data/orandea/impl/bbb')\n// Returns: '../../impl/bbb'\n```\n"}}]);