(self.webpackChunkblog=self.webpackChunkblog||[]).push([[8860],{38860:(n,e,t)=>{"use strict";t.r(e),t.d(e,{default:()=>s});var r=t(59713),u=t.n(r),l=t(6479),a=t.n(l),p=(t(67294),t(3905));function o(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function c(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?o(Object(t),!0).forEach((function(e){u()(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}var m={};function s(n){var e=n.components,t=a()(n,["components"]);return(0,p.kt)("wrapper",c(c(c({},m),t),{},{components:e,mdxType:"MDXLayout"}),(0,p.kt)("h3",null,"title"),(0,p.kt)("p",null,"编写一个算法来判断一个数是不是“快乐数”。"),(0,p.kt)("p",null,"一个“快乐数”定义为：对于一个正整数，每一次将该数替换为它",(0,p.kt)("inlineCode",{parentName:"p"},"每个位置上的数字的平方和"),"，然后重复这个过程直到这个数变为 1，也可能是无限循环但始终变不到 1。如果可以变为 1，那么这个数就是快乐数。"),(0,p.kt)("p",null,"示例: "),(0,p.kt)("pre",null,(0,p.kt)("code",c({parentName:"pre"},{className:"language-js"}),"输入: 19\n输出: true\n解释:\n1^2 + 9^2 = 82\n8^2 + 2^2 = 68\n6^2 + 8^2 = 100\n1^2 + 0^2 + 0^2 = 1\n")),(0,p.kt)("h3",null,"题解"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"使用",(0,p.kt)("inlineCode",{parentName:"li"},"字典 Map")," 来记录循环过程中各个位置上的数字的平方和",(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"若平方和的值为 1, 则跳出循环, 这个数是快乐数;"),(0,p.kt)("li",{parentName:"ul"},"若平方和的值不为 1, 则判断字典 Map 中是否已有该值;",(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"若字典 Map 中已有该值, 则这个数不是快乐数;")))))),(0,p.kt)("pre",null,(0,p.kt)("code",c({parentName:"pre"},{className:"language-js"}),"/**\n * @param {number} n\n * @return {boolean}\n */\nvar isHappy = function(n) {\n  const mapResult = new Map()\n\n  let currentSum = getSum(n)\n  while (currentSum !== 1) {\n    const getMapResult = mapResult.get(currentSum)\n    if (!getMapResult) {\n      mapResult.set(currentSum, 1)\n    } else {\n      return false\n    }\n    currentSum = getSum(currentSum)\n  }\n  return true\n}\n\n/* 获取数字各个位数之和 */\nvar getSum = function(num) {\n  let sum = 0\n  const numStr = String(num)\n  for (let i = 0; i < numStr.length; i++) {\n    sum = sum + Math.pow(numStr[i], 2)\n  }\n  return sum\n}\n")),(0,p.kt)("h3",null,"相关题目"),(0,p.kt)("p",null,"205、242、290、349、350、451"))}s.isMDXComponent=!0}}]);