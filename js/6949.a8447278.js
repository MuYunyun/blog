(self.webpackChunkblog=self.webpackChunkblog||[]).push([[6949],{26949:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>d});var l=t(59713),a=t.n(l),i=t(6479),p=t.n(i),r=(t(67294),t(3905));function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);n&&(l=l.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,l)}return t}function k(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a()(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}var u={};function d(e){var n=e.components,t=p()(e,["components"]);return(0,r.kt)("wrapper",k(k(k({},u),t),{},{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h3",null,"选择器"),(0,r.kt)("h4",null,"子类选择器 (>)"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"p > span {}")," 意为 p 元素后面直接跟着 span 的情形样式才生效")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"对比: ",(0,r.kt)("inlineCode",{parentName:"p"},"p span {}")," 意为 p 元素后面跟着 span 的情形")),(0,r.kt)("h4",null,"相邻选择器 (~)"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"p ~ span {}")," 意为与 p 元素",(0,r.kt)("inlineCode",{parentName:"li"},"同级别"),"且位于 p 元素之后",(0,r.kt)("inlineCode",{parentName:"li"},"所有"),"的 span 标签会生效")),(0,r.kt)("h4",null,"相邻选择器 (+)"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"p + span {}")," 意为与 p 元素",(0,r.kt)("inlineCode",{parentName:"li"},"同级别"),"且位于 p 元素之后",(0,r.kt)("inlineCode",{parentName:"li"},"相邻"),"的 span 标签会生效")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"踩坑: 注意与 .a .b {} 的区别")),(0,r.kt)("h4",null,"伪类选择器和伪元素选择器"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"伪类选择器: ",(0,r.kt)("inlineCode",{parentName:"li"},":link"),"、",(0,r.kt)("inlineCode",{parentName:"li"},":visited"),"、",(0,r.kt)("inlineCode",{parentName:"li"},":hover"),"、",(0,r.kt)("inlineCode",{parentName:"li"},":active"),"(前面 4 个可以记忆成 LoVe-HA)、",(0,r.kt)("inlineCode",{parentName:"li"},":nth-child")),(0,r.kt)("li",{parentName:"ul"},"伪元素选择器: ",(0,r.kt)("inlineCode",{parentName:"li"},"::before"),"、",(0,r.kt)("inlineCode",{parentName:"li"},"::after"))),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"p:first-child {}")," 含义: 某元素的第一个子元素为 p 情形时的样式。"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"注意: 不是 p 的第一个子元素。")),(0,r.kt)("p",null,"结构性伪类选择器: ",(0,r.kt)("inlineCode",{parentName:"p"},":not()"),"、",(0,r.kt)("inlineCode",{parentName:"p"},":empty"),"、",(0,r.kt)("inlineCode",{parentName:"p"},":first-child"),"、",(0,r.kt)("inlineCode",{parentName:"p"},":last-child"),"、",(0,r.kt)("inlineCode",{parentName:"p"},":nth-child(n)"),"、",(0,r.kt)("inlineCode",{parentName:"p"},":nth-last-child(n)")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},":first-of-type"),"、",(0,r.kt)("inlineCode",{parentName:"li"},":nth-of-type(n)"),"、",(0,r.kt)("inlineCode",{parentName:"li"},":last-of-type"),"、",(0,r.kt)("inlineCode",{parentName:"li"},":nth-last-of-type(n)"),"、",(0,r.kt)("inlineCode",{parentName:"li"},"only-child"),"、",(0,r.kt)("inlineCode",{parentName:"li"},"only-of-type"))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"括号中的 n 可以是 ",(0,r.kt)("inlineCode",{parentName:"p"},"2n+1"),"、",(0,r.kt)("inlineCode",{parentName:"p"},"-n+5"),"、",(0,r.kt)("inlineCode",{parentName:"p"},"even"),"、",(0,r.kt)("inlineCode",{parentName:"p"},"odd")," 等")),(0,r.kt)("p",null,"此外还有一些特殊的伪类选择器"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},":enabled"),"、",(0,r.kt)("inlineCode",{parentName:"li"},":disabled")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},":checked"),"(选择框加点变化示例)、",(0,r.kt)("inlineCode",{parentName:"li"},"::selection"),"(改变用鼠标选择网页文本的样式)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},":read-only"),"(与 html 中 readonly='readonly' 配合使用)、",(0,r.kt)("inlineCode",{parentName:"li"},":read-write"),"(与 :read-only 选择器相反, 主要用来指定当元素处于非只读状态时的样式。)")),(0,r.kt)("h3",null,"选择器优先级排序"),(0,r.kt)("pre",null,(0,r.kt)("code",k({parentName:"pre"},{className:"language-js"}),"Id 选择器 > 类选择器 | 属性选择器 > 元素 > 通配选择器\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"伪类选择器的优先级是否是最低的呢?")),(0,r.kt)("p",null,"在 input 的 style 设置 ",(0,r.kt)("inlineCode",{parentName:"p"},"font-size: 30px"),", ::placeholder { font-size: 12px }, 最终的 font-size 是多少呢?"),(0,r.kt)("p",null,"当前的事实是 12px, 那么伪元素选择器的优先级究竟排在哪个位置呢? 答案后续揭晓。"),(0,r.kt)("h3",null,"JavaScript 与伪元素选择器进行通信"),(0,r.kt)("p",null,"可以使用 css 方法 ",(0,r.kt)("inlineCode",{parentName:"p"},"attr()")," 获取节点上 ",(0,r.kt)("inlineCode",{parentName:"p"},"data-xx")," 的属性信息。比如:"),(0,r.kt)("pre",null,(0,r.kt)("code",k({parentName:"pre"},{className:"language-css"}),".demo::after {\n  content: attr(data-msg);\n  ...\n}\n")))}d.isMDXComponent=!0}}]);