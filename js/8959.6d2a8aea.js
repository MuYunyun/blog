(self.webpackChunkblog=self.webpackChunkblog||[]).push([[8959],{8959:(n,e,t)=>{"use strict";t.r(e),t.d(e,{default:()=>i});var r=t(59713),a=t.n(r),l=t(6479),u=t.n(l),c=(t(67294),t(3905));function o(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function s(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?o(Object(t),!0).forEach((function(e){a()(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}var p={};function i(n){var e=n.components,t=u()(n,["components"]);return(0,c.kt)("wrapper",s(s(s({},p),t),{},{components:e,mdxType:"MDXLayout"}),(0,c.kt)("h3",null,"策略模式"),(0,c.kt)("p",null,(0,c.kt)("inlineCode",{parentName:"p"},"定义"),": 根据不同参数可以命中不同的策略"),(0,c.kt)("h3",null,"JavaScript 中的策略模式"),(0,c.kt)("p",null,"观察如下获取年终奖的 demo, 根据不同的参数（level）获得不同策略方法(规则), 这是策略模式在 JS 比较经典的运用之一。"),(0,c.kt)("pre",null,(0,c.kt)("code",s({parentName:"pre"},{className:"language-js"}),"const strategy = {\n  'S': function(salary) {\n    return salary * 4\n  },\n  'A': function(salary) {\n    return salary * 3\n  },\n  'B': function(salary) {\n    return salary * 2\n  }\n}\n\nconst calculateBonus = function(level, salary) {\n  return strategy[level](salary)\n}\n\ncalculateBonus('A', 10000) // 30000\n")),(0,c.kt)("p",null,"在函数是一等公民的 JS 中, 策略模式的使用常常隐藏在高阶函数中, 稍微变换下上述 demo 的形式如下, 可以发现我们平时已经在使用它了, 恭喜我们又掌握了一种设计模式。"),(0,c.kt)("pre",null,(0,c.kt)("code",s({parentName:"pre"},{className:"language-js"}),"const S = function(salary) {\n  return salary * 4\n}\n\nconst A = function(salary) {\n  return salary * 3\n}\n\nconst B = function(salary) {\n  return salary * 2\n}\n\nconst calculateBonus = function(func, salary) {\n  return func(salary)\n}\n\ncalculateBonus(A, 10000) // 30000\n")),(0,c.kt)("h3",null,"优点"),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},"能减少大量的 if 语句"),(0,c.kt)("li",{parentName:"ul"},"复用性好")))}i.isMDXComponent=!0}}]);