(self.webpackChunkblog=self.webpackChunkblog||[]).push([[9250],{49250:n=>{n.exports="### Add Two Numbers II\n\nYou are given two non-empty linked lists representing two non-negative integers. `The most significant digit comes first` and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.\n\nYou may assume the two numbers do not contain any leading zero, except the number 0 itself.\n\nFollow up:\n\nWhat if you cannot modify the input lists? In other words, reversing the lists is not allowed.\n\nExample:\n\n```js\nInput: (7 -> 2 -> 4 -> 3) + (5 -> 6 -> 4)\nOutput: 7 -> 8 -> 0 -> 7\n```\n\n### Analyze\n\n思考: 相对题 2 的逆序相加, 该题顺序相加作如下思考:\n\n* 第一步: 首先补齐位数, 让其一一对应;\n\n```js\n7  ->  2  ->  4  ->  3\n0  ->  5  ->  6  ->  4\n```\n\n* 第二步: 递归计算两个链表同位之和, 同时使用 digitCarry 表示进位的情况;\n\n```js\n/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\n/**\n * @param {ListNode} l1\n * @param {ListNode} l2\n * @return {ListNode}\n */\nvar addTwoNumbers = function(l1, l2) {\n  let countl1 = 0, countl2 = 0\n  let l1List = l1\n  let l2List = l2\n  while(l1List) {\n    countl1++\n    l1List = l1List.next\n  }\n\n  while(l2List) {\n    countl2++\n    l2List = l2List.next\n  }\n\n  // creat the frontest List\n  let tmpList = new ListNode(0)\n  let cur = tmpList\n  let diff = Math.abs(countl2 - countl1)\n  while (diff--) {\n    cur.next = new ListNode(0)\n    cur = cur.next\n  }\n\n  if (countl1 < countl2) {\n    cur.next = l1\n    l1 = tmpList.next\n  } else if (countl2 < countl1) {\n    cur.next = l2\n    l2 = tmpList.next\n  }\n\n\n  // flag: 1 shows digit carry, 0 not;\n  let digitCarry = 0\n\n  /**\n   * calculate the sum of l1 and l2\n   */\n  function listNodeAdd(l1, l2) {\n    if (l1 === null) return\n\n    listNodeAdd(l1.next, l2.next)\n\n    let sum = l1.val + l2.val + digitCarry\n    if (sum >= 10) {\n      l1.val = sum % 10\n      digitCarry = 1\n    } else {\n      l1.val = sum\n      digitCarry = 0\n    }\n  }\n\n  listNodeAdd(l1, l2)\n\n  let result = l1\n  if (digitCarry === 1) {\n    result = new ListNode(1)\n    result.next = l1\n  }\n\n  return result\n}\n```\n\n![](http://with.muyunyun.cn/c2559f9251487e23530e6932cc46516b.jpg-400)\n\n### Sister Title\n\n2"}}]);