(self.webpackChunkblog=self.webpackChunkblog||[]).push([[7770],{37770:n=>{n.exports='### title\n\n编写一个函数来查找字符串数组中的最长公共前缀。\n\n如果不存在公共前缀, 返回空字符串 ""。\n\n示例 1:\n\n```\n输入: ["flower","flow","flight"]\n输出: "fl"\n```\n\n示例 2:\n\n```\n输入: ["dog","racecar","car"]\n输出: ""\n解释: 输入不存在公共前缀。\n```\n\n说明:\n\n所有输入只包含小写字母 a-z 。\n\n### analyze\n\nemm, 虽然是道简单难度的题目, 但是通过率不是很高, 大多数应该是方法没有采取恰当。思路可以如下:\n\n1.选取数组的第一个值 str\n2.让数组中的每个值分别 indexOf(str), 如果 indexOf(str) !== 0, 则让 str = str.slice(0, str.length - 1)\n\n```js\n/**\n * @param {string[]} strs\n * @return {string}\n */\nvar longestCommonPrefix = function (strs) {\n  if (strs.length === 0) return \'\'\n\n  let str = strs[0]\n\n  for (let i = 0; i < strs.length; i++) {\n    while (strs[i].indexOf(str) !== 0) {\n      str = str.slice(0, str.length - 1)\n      if (str.length === 0) { return \'\' }\n    }\n  }\n\n  return str\n};\n```'}}]);