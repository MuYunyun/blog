(self.webpackChunkblog=self.webpackChunkblog||[]).push([[6472],{56472:n=>{n.exports="### call 函数实现\n\n* 将函数引用到对象里\n\n* 调用函数\n\n* 删除对象里的函数\n\n```js\nFunction.prototype.call1 = function (context) {\n  context.fn = this // this 指向实例\n  context.fn()\n  delete context.fn\n}\n\n// 测试:\nconst obj = {\n  value: 'muyy',\n}\n\nfunction testCall() {\n  console.log(this.value)\n}\n\nconst resultCall = testCall.call1(obj) // muyy\n```\n\n### 传入参数的实现\n\n```js\nFunction.prototype.call2 = function (context) {\n  const arr = Array.prototype.slice.call(arguments, 1)\n\n  context.fn = this // this 指向实例\n  context.fn(...arr)\n  delete context.fn\n}\n\n// 测试:\nconst obj2 = {\n  value: 'muyy',\n}\n\nfunction testCall2(age) {\n  console.log(this.value, age) // muyy 23\n}\n\nconst resultCall = testCall2.call2(obj2, 23)\n```"}}]);