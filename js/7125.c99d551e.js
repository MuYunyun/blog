(self.webpackChunkblog=self.webpackChunkblog||[]).push([[7125],{87125:(n,e,t)=>{"use strict";t.r(e),t.d(e,{default:()=>c});var r=t(59713),u=t.n(r),o=t(6479),l=t.n(o),s=(t(67294),t(3905));function i(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function m(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?i(Object(t),!0).forEach((function(e){u()(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}var a={};function c(n){var e=n.components,t=l()(n,["components"]);return(0,s.kt)("wrapper",m(m(m({},a),t),{},{components:e,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"给定一个数组 nums，编写一个函数将所有 0 移动到数组的末尾，同时保持非零元素的相对顺序。"),(0,s.kt)("p",null,"示例:"),(0,s.kt)("pre",null,(0,s.kt)("code",m({parentName:"pre"},{className:"language-js"}),"输入: [0,1,0,3,12]\n输出: [1,3,12,0,0]\n")),(0,s.kt)("p",null,"说明:"),(0,s.kt)("p",null,"必须在原数组上操作，不能拷贝额外的数组。\n尽量减少操作次数。"),(0,s.kt)("h3",null,"first code"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"思路一: 将 0 从数组中移除, 并用 count 变量计算移除 0 的个数, 最后将数组 push 回 count 个 0。")),(0,s.kt)("pre",null,(0,s.kt)("code",m({parentName:"pre"},{className:"language-js"}),"/**\n * @param {number[]} nums\n * @return {void} Do not return anything, modify nums in-place instead.\n */\nvar moveZeroes = function(nums) {\n  const length = nums.length\n  let count = 0               // 0 的个数\n  for (let i = 0; i < length; i++) {\n    if (nums[i - count] === 0) {\n      nums.splice(i - count, 1)\n      count++\n    }\n  }\n  for (let i = 0; i < count; i++) {\n    nums.push(0)\n  }\n  return nums\n}\n")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"思路二: 使用双指针")),(0,s.kt)("pre",null,(0,s.kt)("code",m({parentName:"pre"},{className:"language-js"}),"/**\n * @param {number[]} nums\n * @return {void} Do not return anything, modify nums in-place instead.\n */\nvar moveZeroes = function(nums) {\n  let m = 0 // 指针一的下标, [0, m) 区域用于存储非 0 元素\n\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i]) { // 如果存在 num[i] 不为 0, 则让其与 num[m] 交换\n      if (i !== m) {\n        [nums[m], nums[i]] = [nums[i], nums[m]]\n      }\n      m++\n    }\n  }\n  return nums\n}\n")),(0,s.kt)("h3",null,"同类题目"),(0,s.kt)("p",null,"26、27、80。"))}c.isMDXComponent=!0}}]);