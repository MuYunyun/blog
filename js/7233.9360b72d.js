(self.webpackChunkblog=self.webpackChunkblog||[]).push([[7233],{57233:n=>{n.exports="## 错误处理\n\n### 捕获和抛出异常的时机\n\n* 使用第三方库通常需要进行捕获;\n* 写给他人使用的第三方库则通常需要抛出相应异常;\n\n### 自定义错误类型\n\n下面提供 `ES5` 和 `ES6` 两种自定义错误类型的写法\n\n```js\n// ES6\nclass CustomError extends Error {\n  constructor(message) {\n    super(message)\n    this.name = 'CustomError'\n  }\n}\n\n// ES5\nfunction CustomError(message) {\n  this.name = 'CustomError'\n  this.message = message\n  Error.captureStackTrace(this, CustomError)\n}\n\nCustomError.prototype = new Error()\nCustomError.prototype.constructor = CustomError\n```\n\n### 记录错误日志\n\n记录错误日志通常使用 `<img>` 标签, 其可以避免跨域, 用法如下:\n\n```js\nfunction logError(msg) {\n  const img = new Image()\n  img.src = `/log?${encodeURIComponent(msg)}`\n}\n```"}}]);