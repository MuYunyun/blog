(self.webpackChunkblog=self.webpackChunkblog||[]).push([[2518],{22518:(n,e,t)=>{"use strict";t.r(e),t.d(e,{default:()=>k});var r=t(59713),l=t.n(r),a=t(6479),o=t.n(a),u=(t(67294),t(3905));function p(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function s(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?p(Object(t),!0).forEach((function(e){l()(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):p(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}var c={};function k(n){var e=n.components,t=o()(n,["components"]);return(0,u.kt)("wrapper",s(s(s({},c),t),{},{components:e,mdxType:"MDXLayout"}),(0,u.kt)("h3",null,"36.Valid_Sudoku"),(0,u.kt)("p",null,"判断一个 9 x 9 的数独是否有效。只需要根据以下规则, ",(0,u.kt)("inlineCode",{parentName:"p"},"验证已经填入的数字是否有效即可"),"。"),(0,u.kt)("p",null,"1.数字 1 - 9 在每一行只能出现一次。\n2.数字 1 - 9 在每一列只能出现一次。\n3.数字 1 - 9 在每一个以粗实线分隔的 3 x 3 宫内只能出现一次。"),(0,u.kt)("p",null,(0,u.kt)("a",s({parentName:"p"},{href:"https://leetcode-cn.com/problems/valid-sudoku/description/"}),"题目链接")),(0,u.kt)("p",null,"示例 1:"),(0,u.kt)("pre",null,(0,u.kt)("code",s({parentName:"pre"},{className:"language-js"}),'输入:\n[\n  ["5","3",".",".","7",".",".",".","."],\n  ["6",".",".","1","9","5",".",".","."],\n  [".","9","8",".",".",".",".","6","."],\n  ["8",".",".",".","6",".",".",".","3"],\n  ["4",".",".","8",".","3",".",".","1"],\n  ["7",".",".",".","2",".",".",".","6"],\n  [".","6",".",".",".",".","2","8","."],\n  [".",".",".","4","1","9",".",".","5"],\n  [".",".",".",".","8",".",".","7","9"]\n]\n输出: true\n')),(0,u.kt)("p",null,"示例 2:"),(0,u.kt)("pre",null,(0,u.kt)("code",s({parentName:"pre"},{className:"language-js"}),'输入:\n[\n  ["8","3",".",".","7",".",".",".","."],\n  ["6",".",".","1","9","5",".",".","."],\n  [".","9","8",".",".",".",".","6","."],\n  ["8",".",".",".","6",".",".",".","3"],\n  ["4",".",".","8",".","3",".",".","1"],\n  ["7",".",".",".","2",".",".",".","6"],\n  [".","6",".",".",".",".","2","8","."],\n  [".",".",".","4","1","9",".",".","5"],\n  [".",".",".",".","8",".",".","7","9"]\n]\n输出: false\n')),(0,u.kt)("p",null,"解释: 除了第一行的第一个数字从 5 改为 8 以外, 空格内其他数字均与示例 1 相同。\n但由于位于左上角的 3 x 3 宫内有两个 8 存在, 因此这个数独是无效的。"),(0,u.kt)("p",null,"说明:"),(0,u.kt)("ul",null,(0,u.kt)("li",{parentName:"ul"},"一个有效的数独（部分已被填充）不一定是可解的"),(0,u.kt)("li",{parentName:"ul"},"只需要根据以上规则, 验证已经填入的数字是否有效即可"),(0,u.kt)("li",{parentName:"ul"},"给定数独序列只包含数字 1 - 9 和字符 '.'"),(0,u.kt)("li",{parentName:"ul"},"给定数独永远是 9 x 9 形式的")),(0,u.kt)("h3",null,"analyze"),(0,u.kt)("p",null,"依次遍历二维数组, 对 3 种情况分别进行校验。"),(0,u.kt)("pre",null,(0,u.kt)("code",s({parentName:"pre"},{className:"language-js"}),"/**\n * @param {character[][]} board\n * @return {boolean}\n */\nvar isValidSudoku = function (board) {\n  const set = new Set()\n  for (let x = 0; x < 9; x++) {\n    for (let y = 0; y < 9; y++) {\n      const num = board[x][y]\n      if (num !== '.') {\n        if (set.has(`row ${x} ${num}`)\n          || set.has(`col ${y} ${num}`)\n          || set.has(`block ${Math.floor(x / 3)} ${Math.floor(y / 3)} ${num}`)\n        ) {\n          return false\n        } else {\n          set.add(`row ${x} ${num}`)\n          set.add(`col ${y} ${num}`)\n          set.add(`block ${Math.floor(x / 3)} ${Math.floor(y / 3)} ${num}`)\n        }\n      }\n    }\n  }\n  return true\n};\n")))}k.isMDXComponent=!0}}]);