(self.webpackChunkblog=self.webpackChunkblog||[]).push([[2569],{92569:(n,e,t)=>{"use strict";t.r(e),t.d(e,{default:()=>u});var r=t(59713),s=t.n(r),o=t(6479),l=t.n(o),c=(t(67294),t(3905));function i(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function b(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?i(Object(t),!0).forEach((function(e){s()(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}var a={};function u(n){var e=n.components,t=l()(n,["components"]);return(0,c.kt)("wrapper",b(b(b({},a),t),{},{components:e,mdxType:"MDXLayout"}),(0,c.kt)("p",null,(0,c.kt)("a",b({parentName:"p"},{href:"https://leetcode-cn.com/explore/interview/card/bytedance/242/string/1016/"}),"题目")),(0,c.kt)("p",null,"题目演变:"),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},"s1 的排列方式有几种?"),(0,c.kt)("li",{parentName:"ul"},"将 s1 的所有排列打印出来?")),(0,c.kt)("p",null,"顺着这个思路, 想到了递归。"),(0,c.kt)("p",null,"上面这种思路也是可以的, 但是最终用判断字符中各字母出现的数字来实现。"),(0,c.kt)("h3",null,"Analyze"),(0,c.kt)("pre",null,(0,c.kt)("code",b({parentName:"pre"},{className:"language-js"}),"/** 18.12.08 */\n/**\n * @param {string} s1\n * @param {string} s2\n * @return {boolean}\n */\nvar checkInclusion = function (s1, s2) {\n  const s1Obj = {}\n  const s1Length = s1.length\n  for (let i = 0; i < s1Length; i++) {\n    if (s1Obj[s1[i]]) {\n      s1Obj[s1[i]] = ++s1Obj[s1[i]]\n    } else {\n      s1Obj[s1[i]] = 1\n    }\n  }\n\n  const s2Length = s2.length\n\n  if (s1Length > s2Length) {\n    return false\n  }\n\n  const count = s2Length - s1Length\n  let str = ''\n\n  for (let i = 0; i <= count; i++) {\n    str = s2.slice(i, s1Length + i)\n    const s2Obj = {}\n    for (let z = 0; z < str.length; z++) {\n      if (!s1Obj[str[z]]) {\n        i = i + z\n        break\n      }\n      if (s2Obj[str[z]]) {\n        s2Obj[str[z]] = s2Obj[str[z]] + 1\n      } else {\n        s2Obj[str[z]] = 1\n      }\n    }\n\n    let bool = true\n    for (let y = 0; y < Object.keys(s1Obj).length; y++) {\n      if (s2Obj[Object.keys(s1Obj)[y]] !== s1Obj[Object.keys(s1Obj)[y]]) {\n        bool = false\n        break\n      }\n    }\n\n    if (bool === true) {\n      return true\n    }\n  }\n\n  return false\n};\n")))}u.isMDXComponent=!0}}]);