(self.webpackChunkblog=self.webpackChunkblog||[]).push([[4437],{14437:(n,e,t)=>{"use strict";t.r(e),t.d(e,{default:()=>s});var r=t(59713),l=t.n(r),u=t(6479),p=t.n(u),a=(t(67294),t(3905));function o(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function c(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?o(Object(t),!0).forEach((function(e){l()(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}var i={};function s(n){var e=n.components,t=p()(n,["components"]);return(0,a.kt)("wrapper",c(c(c({},i),t),{},{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h3",null,"题目"),(0,a.kt)("p",null,"给定一个排序数组，你需要在原地删除重复出现的元素，使得每个元素最多出现两次，返回移除后数组的新长度。"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"不要使用额外的数组空间"),"，你必须在原地修改输入数组并在使用 O(1) 额外空间的条件下完成。"),(0,a.kt)("p",null,"示例 1:"),(0,a.kt)("p",null,"给定 ",(0,a.kt)("inlineCode",{parentName:"p"},"nums = [1,1,1,2,2,3]"),","),(0,a.kt)("p",null,"函数应返回新长度 length = 5, 并且原数组的前五个元素被修改为 1, 1, 2, 2, 3 。"),(0,a.kt)("p",null,"你",(0,a.kt)("inlineCode",{parentName:"p"},"不需要考虑数组中超出新长度后面的元素"),"。"),(0,a.kt)("p",null,"示例 2:"),(0,a.kt)("p",null,"给定 ",(0,a.kt)("inlineCode",{parentName:"p"},"nums = [0,0,1,1,1,1,2,3,3]"),","),(0,a.kt)("p",null,"函数应返回新长度 length = 7, 并且原数组的前五个元素被修改为 0, 0, 1, 1, 2, 3, 3 。"),(0,a.kt)("p",null,"你不需要考虑数组中超出新长度后面的元素。"),(0,a.kt)("p",null,"说明:"),(0,a.kt)("p",null,"为什么返回数值是整数，但输出的答案是数组呢?"),(0,a.kt)("p",null,"请注意，输入数组是以“引用”方式传递的，这意味着在函数里修改输入数组对于调用者是可见的。"),(0,a.kt)("p",null,"你可以想象内部操作如下:"),(0,a.kt)("pre",null,(0,a.kt)("code",c({parentName:"pre"},{className:"language-js"}),"// nums 是以“引用”方式传递的。也就是说，不对实参做任何拷贝\nint len = removeDuplicates(nums);\n\n// 在函数里修改输入数组对于调用者是可见的。\n// 根据你的函数返回的长度, 它会打印出数组中该长度范围内的所有元素。\nfor (int i = 0; i < len; i++) {\n    print(nums[i]);\n}\n")),(0,a.kt)("h3",null,"解题"),(0,a.kt)("p",null,(0,a.kt)("img",c({parentName:"p"},{src:"http://with.muyunyun.cn/e1ebb0d0612908377d6aca476611f03d.jpg",alt:null}))),(0,a.kt)("pre",null,(0,a.kt)("code",c({parentName:"pre"},{className:"language-js"}),"/**\n * @param {number[]} nums\n * @return {number}\n */\nvar removeDuplicates = function(nums) {\n  if (nums.length <= 2) return nums.length\n  let cur = 1 // 新数组的下标位数\n  for (let i = 2; i < nums.length; i++) {\n    // 对题目中每个元素最多出现两次的条件作限制\n    if (nums[i] !== nums[cur - 1]) {\n      nums[cur + 1] = nums[i]\n      cur++\n    }\n  }\n  return cur + 1\n}\n")),(0,a.kt)("h3",null,"同类题目"),(0,a.kt)("p",null,"关键词: 双指针。"),(0,a.kt)("p",null,"26、27、283。"))}s.isMDXComponent=!0}}]);