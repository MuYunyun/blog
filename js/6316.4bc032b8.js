(self.webpackChunkblog=self.webpackChunkblog||[]).push([[6316],{6316:(n,e,t)=>{"use strict";t.r(e),t.d(e,{default:()=>m});var r=t(59713),l=t.n(r),u=t(6479),s=t.n(u),a=(t(67294),t(3905));function p(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function o(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?p(Object(t),!0).forEach((function(e){l()(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):p(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}var c={};function m(n){var e=n.components,t=s()(n,["components"]);return(0,a.kt)("wrapper",o(o(o({},c),t),{},{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h3",null,"title"),(0,a.kt)("p",null,"给定两个数组，编写一个函数来计算它们的交集。"),(0,a.kt)("p",null,"示例 1:"),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-js"}),"输入: nums1 = [1,2,2,1], nums2 = [2,2]\n输出: [2]\n")),(0,a.kt)("p",null,"示例 2:"),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-js"}),"输入: nums1 = [4,9,5], nums2 = [9,4,9,8,4]\n输出: [9,4]\n")),(0,a.kt)("p",null,"说明:"),(0,a.kt)("p",null,"输出结果中的每个元素一定是",(0,a.kt)("inlineCode",{parentName:"p"},"唯一的"),"。\n我们可以不考虑输出结果的顺序。"),(0,a.kt)("h3",null,"题解"),(0,a.kt)("p",null,"因为题目明确了输出结果中的每个元素一定是",(0,a.kt)("inlineCode",{parentName:"p"},"唯一的"),", 因而可以使用集合 Set 唯一的特性, 完成题解。"),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-js"}),"/**\n * @param {number[]} nums1\n * @param {number[]} nums2\n * @return {number[]}\n */\nvar intersection = function(nums1, nums2) {\n  const resultSet = new Set()\n  const num1Set = new Set(nums1)\n  for (let i = 0; i < nums2.length; i++) {\n    if (num1Set.has(nums2[i])) {\n      resultSet.add(nums2[i])\n    }\n  }\n\n  return [...resultSet]\n}\n")),(0,a.kt)("h3",null,"进阶思考"),(0,a.kt)("p",null,"如果给定的两个数组是排好序的, 是否有其它解法呢?"),(0,a.kt)("p",null,"示例 1:"),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-js"}),"输入: nums1 = [1,1,2,2], nums2 = [2,2]\n输出: [2]\n")),(0,a.kt)("p",null,"示例 2:"),(0,a.kt)("pre",null,(0,a.kt)("code",o({parentName:"pre"},{className:"language-js"}),"输入: nums1 = [4,5,9], nums2 = [4,4,8,9,9]\n输出: [4,9]\n")),(0,a.kt)("p",null,"大致想法: 可以使用移动指针的方式。"),(0,a.kt)("h3",null,"相关题目"),(0,a.kt)("p",null,"202、205、242、290、350、451"))}m.isMDXComponent=!0}}]);