(self.webpackChunkblog=self.webpackChunkblog||[]).push([[1105],{81105:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>d});var r=t(59713),a=t.n(r),s=t(6479),l=t.n(s),p=(t(67294),t(3905));function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a()(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}var u={};function d(e){var n=e.components,t=l()(e,["components"]);return(0,p.kt)("wrapper",c(c(c({},u),t),{},{components:n,mdxType:"MDXLayout"}),(0,p.kt)("p",null,(0,p.kt)("a",c({parentName:"p"},{href:"https://github.com/cdr/code-server"}),"code-server")," 是 vscode 的服务端程序，通过部署 code-server 在服务器，可以实现 web 端访问 vscode。进而可以达到以下能力:"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"【直接】支持跨设备(Mac/iPad/iPhone 等等)编程，同时保证多端编程环境统一。"),(0,p.kt)("li",{parentName:"ul"},"【直接】支持在 Web 端提交 git 代码。"),(0,p.kt)("li",{parentName:"ul"},"【间接】解放背包重量。")),(0,p.kt)("p",null,"至于将 code-server 部署在树莓派上相比云端服务器好处是综合成本低，后续若要更换云服务器，只需更改内网映射端口即可，迁移会十分便捷。"),(0,p.kt)("h3",null,"树莓派上部署 code-server"),(0,p.kt)("p",null,"参考 ",(0,p.kt)("a",c({parentName:"p"},{href:"https://coder.com/docs/code-server/latest/install#raspberry-pi"}),"code-server 官网"),"，在树莓派上其推荐使用 ",(0,p.kt)("a",c({parentName:"p"},{href:"https://coder.com/docs/code-server/latest/install#yarn-npm"}),"yarn 的方式"),"来进行安装 code-server。"),(0,p.kt)("p",null,"此外",(0,p.kt)("a",c({parentName:"p"},{href:"https://github.com/cdr/code-server/blob/main/docs/npm.md"}),"前置安装"),"提到 ",(0,p.kt)("inlineCode",{parentName:"p"},"node.js 版本需要与所下载的 VSCode's Electron 所依赖的版本一致"),"。笔者下载的 code-server 版本为 code-server_3.12.0_arm64.deb，其需要 node.js 14.x 版本。执行如下命令进行前置安装:"),(0,p.kt)("pre",null,(0,p.kt)("code",c({parentName:"pre"},{className:"language-bash"}),"sudo apt-get install -y \\\n  build-essential \\\n  pkg-config \\\n  python3\nnpm config set python python3\n")),(0,p.kt)("p",null,"按照 ",(0,p.kt)("a",c({parentName:"p"},{href:"https://yarn.bootcss.com/docs/install/#debian-stable"}),"yarn 官网")," 所述，在 Debian / Ubuntu 系统中安装 yarn:"),(0,p.kt)("pre",null,(0,p.kt)("code",c({parentName:"pre"},{className:"language-bash"}),'curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -\necho "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list\nsudo apt update && sudo apt install yarn\n\nyarn --version // 1.22.15\n')),(0,p.kt)("p",null,"执行 ",(0,p.kt)("inlineCode",{parentName:"p"},"sudo vim .bashrc"),"，将 yarn 全局安装命令的执行路径写入 .bashrc 文件。"),(0,p.kt)("pre",null,(0,p.kt)("code",c({parentName:"pre"},{className:"language-bash"}),'export PATH="$PATH:`yarn global bin`"\nsource ~/.bashrc # 使之生效\n')),(0,p.kt)("p",null,"参照 ",(0,p.kt)("a",c({parentName:"p"},{href:"https://coder.com/docs/code-server/latest/npm#installing"}),"code-server 官网安装教程"),"，执行以下命令安装 code-server:"),(0,p.kt)("pre",null,(0,p.kt)("code",c({parentName:"pre"},{className:"language-bash"}),"yarn global add code-server\ncode-server --version # 3.12.0\n")),(0,p.kt)("blockquote",null,(0,p.kt)("p",{parentName:"blockquote"},"笔者使用 npm install -g code-server 无法成功安装，最终使用 yarn global add code-server 安装成功。")),(0,p.kt)("p",null,"编辑 ",(0,p.kt)("inlineCode",{parentName:"p"},".config/code-server/config.yaml")),(0,p.kt)("pre",null,(0,p.kt)("code",c({parentName:"pre"},{className:"language-bash"}),"sudo vim .config/code-server/config.yaml\n")),(0,p.kt)("pre",null,(0,p.kt)("code",c({parentName:"pre"},{className:"language-bash"}),"bind-addr: 127.0.0.1:5555\nauth: password\npassword: xxxxxxxxx\ncert: false\n")),(0,p.kt)("pre",null,(0,p.kt)("code",c({parentName:"pre"},{className:"language-bash"}),"# 启动 code-server\ncode-server\n")),(0,p.kt)("p",null,"在 ",(0,p.kt)("inlineCode",{parentName:"p"},"frpc.ini")," 中添加以下配置:"),(0,p.kt)("blockquote",null,(0,p.kt)("p",{parentName:"blockquote"},"frpc.ini 与 pm2 的完整配置说明可以参考",(0,p.kt)("a",c({parentName:"p"},{href:"https://muyunyun.cn/blog/fes9wogn"}),"内网穿透"),"章节。")),(0,p.kt)("pre",null,(0,p.kt)("code",c({parentName:"pre"},{className:"language-bash"}),"[vscode-server-frp-muyunyun-cn-5555]\ntype = tcp\nlocal_ip = 127.0.0.1\n# code-server 服务运行在树莓派本地的 5555 端口上\nlocal_port = 5555\n# 对外运行在服务器端云主机 5555 端口上\nremote_port = 5555\n")),(0,p.kt)("p",null,"使用 pm2 重启 frpc 服务:"),(0,p.kt)("pre",null,(0,p.kt)("code",c({parentName:"pre"},{className:"language-bash"}),"cd /opt/frp_0.37.0_linux_arm64\npm2 restart start_frpc.sh\n")),(0,p.kt)("p",null,"此时在 frps 服务器端(云主机)中通过 ",(0,p.kt)("inlineCode",{parentName:"p"},"lsof -i:5555")," 可以看到服务端端口 5555 已经被 frps 服务占据。"),(0,p.kt)("p",null,(0,p.kt)("img",c({parentName:"p"},{src:"http://with.muyunyun.cn/c4987da142cbc4b261b6b333df5d490b.jpg",alt:null}))),(0,p.kt)("p",null,"同时在公网中可以看到 code-server 服务已成功运行"),(0,p.kt)("p",null,(0,p.kt)("img",c({parentName:"p"},{src:"http://with.muyunyun.cn/9f5f9fa5cd5c1510695ca492e939c255.jpg",alt:null}))),(0,p.kt)("p",null,"使用 pm2 守护运行 code-server 以让相关服务遇到意外(比如断电后)能自动重启:"),(0,p.kt)("pre",null,(0,p.kt)("code",c({parentName:"pre"},{className:"language-bash"}),'cd /opt/frp_0.37.0_linux_arm64\nsudo touch start_code_server.sh\nsudo chmod 777 start_code_server.sh\nsudo echo "code-server" > start_code_server.sh\npm2 start /opt/frp_0.37.0_linux_arm64/start_code_server.sh\npm2 save\n')),(0,p.kt)("p",null,"笔者在域名解析处新增 code 主机记录以语义化访问 code-server 服务，此时访问 ",(0,p.kt)("a",c({parentName:"p"},{href:"http://code.muyunyun.cn:5555"}),"http://code.muyunyun.cn:5555")," 与访问 ",(0,p.kt)("a",c({parentName:"p"},{href:"http://frp.muyunyun.cn:5555"}),"http://frp.muyunyun.cn:5555")," 效果是相同的。"),(0,p.kt)("p",null,(0,p.kt)("img",c({parentName:"p"},{src:"http://with.muyunyun.cn/b0afbe6f729762ce8e50a00624c3e11a.jpg-400",alt:null}))),(0,p.kt)("h3",null,"支持 HTTPS 协议访问"),(0,p.kt)("p",null,"访问 HTTP 下的 code-server 服务，发现不能完整使用插件、剪切板等功能模块。"),(0,p.kt)("p",null,(0,p.kt)("img",c({parentName:"p"},{src:"http://with.muyunyun.cn/580bab3470fb6535fae23530db223a94.jpg-400",alt:null}))),(0,p.kt)("p",null,"根据控制台报错信息，推测这些模块依赖了 service work，查阅 ",(0,p.kt)("a",c({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers#setting_up_to_play_with_service_workers"}),"Setting up to play with service workers")," 得知, service work 确实必须在 Https 协议中使用。"),(0,p.kt)("p",null,"因此若要完整地使用 code-server 服务，需要配置 HTTPS 协议，本文中就不展开 HTTPS 配置的详细说明了，相关过程记录在 ",(0,p.kt)("a",c({parentName:"p"},{href:"https://muyunyun.cn/blog/mx5pvgl1"}),"HTTPS 域名配置")," 章节中，其介绍了给域名获取免费的 Https 证书并让 Https 生效的过程。"),(0,p.kt)("h3",null,"支持在 HTTPS 协议中访问 WebSocket"),(0,p.kt)("p",null,"在配置完 HTTPS 服务后，访问 HTTPS 链接发现还是无法在 web 端正常使用 vscode，排查发现 code-server 使用 WebSocket 以保持长连接，因此需要在 nginx 对 WebSocket 的流量作配置。"),(0,p.kt)("p",null,"执行 ",(0,p.kt)("inlineCode",{parentName:"p"},"vim /etc/nginx/conf.d/www.muyunyun.cn.conf"),"，完整的 nginx 配置如下:"),(0,p.kt)("p",null,"------------ 分割线 ------------"),(0,p.kt)("pre",null,(0,p.kt)("code",c({parentName:"pre"},{className:"language-bash"}),'map $http_upgrade $connection_upgrade {\n        default upgrade;\n        \'\' close;\n}\n\nupstream code_muyunyun_cn {\n  server 127.0.0.1:5555;\n}\n\nserver {\n    server_name      code.muyunyun.cn;\n    listen           80;\n    listen           [::]:80;\n    rewrite ^(.*)$ https://$host$1 permanent;\n\n    error_page 404 /404.html;\n        location = /40x.html {\n    }\n\n    error_page 500 502 503 504 /50x.html;\n        location = /50x.html {\n    }\n}\n\nserver {\n    listen       443 ssl http2;\n    listen       [::]:443 ssl http2;\n    server_name  code.muyunyun.cn;\n    root         /usr/share/nginx/html/code.muyunyun.cn;\n\n    location / {\n        proxy_pass http://code_muyunyun_cn;\n        proxy_set_header Host $host:443;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        # support websocket\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection $connection_upgrade;\n    }\n\n    ssl_certificate "/etc/nginx/ssl/code.muyunyun.cn/fullchain.cer";\n    ssl_certificate_key "/etc/nginx/ssl/code.muyunyun.cn/code.muyunyun.cn.key";\n    ssl_session_cache shared:SSL:1m;\n    ssl_session_timeout  10m;\n    ssl_ciphers HIGH:!aNULL:!MD5;\n    ssl_prefer_server_ciphers on;\n\n    # Load configuration files for the default server block.\n    include /etc/nginx/default.d/*.conf;\n\n    error_page 404 /404.html;\n        location = /40x.html {\n    }\n\n    error_page 500 502 503 504 /50x.html;\n        location = /50x.html {\n    }\n}\n')),(0,p.kt)("p",null,"此时实现了在公网中使用使用 https 访问 code-server。"),(0,p.kt)("p",null,(0,p.kt)("img",c({parentName:"p"},{src:"http://with.muyunyun.cn/c8b78a74fccd162ef97ecd2b53da09f4.jpg-400",alt:null}))),(0,p.kt)("h3",null,"给项目添加写入权限"),(0,p.kt)("pre",null,(0,p.kt)("code",c({parentName:"pre"},{className:"language-bash"}),"chown -R ubuntu /home/project/blog\nchown -R ubuntu /home/project/blog/.git\n")),(0,p.kt)("h3",null,"code-server 同步 ssh"),(0,p.kt)("p",null,"登入树莓派端，输入"),(0,p.kt)("pre",null,(0,p.kt)("code",c({parentName:"pre"},{className:"language-bash"}),'ssh-keygen -t rsa -C "youremail@example.com" -f ~/.ssh/github\n')),(0,p.kt)("p",null,"// todo 判断如下步骤是否必须"),(0,p.kt)("p",null,"将 ~/.ssh/github.pub 公钥中的内容复制到剪贴板，拷贝到 ",(0,p.kt)("a",c({parentName:"p"},{href:"https://github.com/settings/keys"}),"GitHub ssh")," 的 Key 文本框中。"),(0,p.kt)("p",null,"执行以下命令测试是否认证成功"),(0,p.kt)("pre",null,(0,p.kt)("code",c({parentName:"pre"},{className:"language-bash"}),"ssh -T git@github.com\n# Hi github! You've successfully authenticated, but GitHub does not provide shell access.\n")))}d.isMDXComponent=!0}}]);