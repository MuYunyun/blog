(self.webpackChunkblog=self.webpackChunkblog||[]).push([[7116],{27116:e=>{e.exports="### flex 基本用法\n\n```css\n.demo {\n  flex: 1 1 100px;\n}\n```\n\n三个值分别为:\n\n* `flex-grow`: 占比, 默认为 0;\n* `flex-shrink`: 缩减比例, 0 为不缩减, 默认为 1;\n* `flex-basis`: flex 基本尺寸, 默认为 auto;\n\n### How to calculate the flex-shrink\n\n![](http://with.muyunyun.cn/1431bcfc07c05820a123d5716955b860.jpg)\n\nThe calculate step is a little difficulty, you can see it in the [how-to-calculate-flex-shrink](https://stackoverflow.com/questions/36550840/how-to-calculate-flex-shrink-when-flex-items-have-a-different-flex-basis).\n\n### justify-content\n\n* space-around: The spacing between each pair of adjacent items is the same, The empty space before the first and after the last item equals `half of the space` between each pair of adjacent items.\n* space-evenly: The spacing between each pair of adjacent items, the main-start edge and the first item, and the main-end edge and the last item, `are all exactly the sam`\n\n### flex 特殊用法\n\n#### flex + z-index\n\n* 我们知道 `z-index` 要与定位元素(absolute、relative、absolute、sticky)一起使用, 但使用了 flex 布局后, 尽管仍然是 `position: static`, `z-index` 仍然是生效的。\n\n#### flex + margin\n\n`flex` 和 `margin` 结合使用能达到垂直居中的妙用。\n\n> 见 [水平垂直居中]([./水平垂直居中](https://github.com/MuYunyun/blog/blob/master/BasicSkill/css/水平垂直居中.md).md)\n\n场景: 右侧图标的导航栏的场景也适用此方式。\n\n![](http://with.muyunyun.cn/234bae5566a4662a6995ff01191865e3.jpg)\n\n方法: 在 flex 布局中, 使用 `margin-left: auto`。\n\n#### flex + height: 100%\n\n在 ios10 以下的 ios 版本中, 在 flex 布局中不推荐与 `height: 100%` 一起连用;\n\n* 原因一: 父元素为 flex 布局, 若父元素不设置 `height: 100%`, 子元素设置 `height: 100%` 是继承不到父元素的高度的;\n* 原因二: 父元素为 flex 布局, 即使父元素设置了 `height: 100%`, 子元素使用 `height: 100%` 继承的高度也是有偏差的;\n\n一般使用 `flex: 1` 取代 `height: 100%`, 此外要让父元素的高度传给子元素通常需要配合 `flex-direction`。使用如下:\n\n```css\n.parentDemo {\n  display: flex;\n  flex-direction: column;\n}\n```\n\n#### Flex 布局中省略号失效\n\nFlex 布局中, 省略号属性是失效的。\n\n```css\n.demo {\n  display: flex;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  white-space: nowrap;\n}\n```\n"}}]);