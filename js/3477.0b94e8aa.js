(self.webpackChunkblog=self.webpackChunkblog||[]).push([[3477],{93477:n=>{n.exports="### 位运算符\n\n小数和 0 使用或运算符能得到对应的整数。这个知识点在计算 `expirationTime` 中有用到。\n\n```js\n1.1 | 0 => 1\n```\n\n### 位运算在 React 的运用\n\n可以看到在 React 中存在大量对位运算声明的环境信息。比如下面摘自[源码](https://github.com/MuYunyun/react/blob/bf8c904110dfd4ba6870a952e3291d78136308cb/packages/react-reconciler/src/ReactTypeOfMode.js#L12-L15)。\n\n```js\nvar NoContext = 0b000;\nvar ConcurrentMode = 0b001;\nvar StrictMode = 0b010;\nvar ProfileMode = 0b100;\n```\n\n使用二进制的数字声明变量有什么好处呢? 答案是简单易用。\n\n* 判断是否是 `ConcurrentMode`\n\n```js\nNoContext & ConcurrentMode // 0\n```\n\n* 使用 `ConcurrentMode`\n\n```js\nNoContext | ConcurrentMode // 1\n```\n\n* 使用 `ConcurrentMode` 以及 `StrictMode`\n\n```js\nvar context = NoContext | ConcurrentMode | StrictMode // 3\ncontext & ConcurrentMode // 1\ncontext & StrictMode // 2\n```"}}]);