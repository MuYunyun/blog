(self.webpackChunkblog=self.webpackChunkblog||[]).push([[4752],{74752:n=>{n.exports="### Render Props\n\n* 概要: 属性中传入函数, 函数返回组件\n* 目的: 封装行为\n\n### demo\n\n在如下例子中, 组件 `PassState` 即为承载公用逻辑的载体。组件 `App` 和 `UseState` 为使用方。\n\n```js\nclass PassState extends Component {\n  constructor() {\n    super()\n    this.state = { name: 'muyy' }\n  }\n\n  render() {\n    return (\n      <>{this.props.render(this.state)}</>\n    )\n  }\n}\n\nclass UseState extends Component {\n  render() {\n    const { state } = this.props\n    return <>{state.name}</>\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <PassState\n        render={(state) => (\n          <UseState state={state} />\n        )}\n      />\n    )\n  }\n}\n```\n\n这是官方摘取的 render Props 例子, 只要将 render 进行替换成 children, 可以发现日常使用它的情形就很寻常了。\n\n```js\nclass PassState extends Component {\n  constructor() {\n    super()\n    this.state = { name: 'muyy' }\n  }\n\n  render() {\n    return (\n      <>{this.props.children(this.state)}</>\n    )\n  }\n}\n\nclass UseState extends Component {\n  render() {\n    const { state } = this.props\n    return <>{state.name}</>\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <PassState>\n        {(state) => (\n          <UseState state={state} />\n        )}\n      </PassState>\n    )\n  }\n}\n```\n\n比如 beast-mobile 中 Matrix 组件就是这种形式。\n\n### render props 是否都适合转化为 Hooks\n\n```js\n<Matrix dataSources={dataSources}>\n  {({ src, index }) => {\n    return (\n      <div\n        style={{\n          padding: 10,\n          background: '#ebebeb',\n          borderRadius: 4,\n          fontSize: '12px',\n          color: '#666'\n        }}\n      >\n        <div style={{ fontSize: '12px' }}> name: {src.name}</div>\n        <div style={{ fontSize: '12px' }}> age: {src.age}</div>\n        <div style={{ fontSize: '12px' }}> address: {src.address}</div>\n        <div style={{ fontSize: '12px' }}> index: {index}</div>\n      </div>\n    )\n  }}\n</Matrix>\n```\n\n![](http://with.muyunyun.cn/e99997d480a89b1c5f244d19bd67404a.jpg-400)\n\nMatrix 组件用于在项目中自动调整行内布局, 该组件中 render props 的参数是和当前排列数有关, 与`排列数相关`的 render props 没有很好的办法转化为 Hooks, 因此 Render Props 还是有用武之地的。\n"}}]);