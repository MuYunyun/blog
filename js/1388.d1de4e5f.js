(self.webpackChunkblog=self.webpackChunkblog||[]).push([[1388],{11388:(n,t,e)=>{"use strict";e.r(t),e.d(t,{default:()=>c});var l=e(59713),a=e.n(l),o=e(6479),i=e.n(o),d=(e(67294),e(3905));function r(n,t){var e=Object.keys(n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(n);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),e.push.apply(e,l)}return e}function s(n){for(var t=1;t<arguments.length;t++){var e=null!=arguments[t]?arguments[t]:{};t%2?r(Object(e),!0).forEach((function(t){a()(n,t,e[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(e)):r(Object(e)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(e,t))}))}return n}var p={};function c(n){var t=n.components,e=i()(n,["components"]);return(0,d.kt)("wrapper",s(s(s({},p),e),{},{components:t,mdxType:"MDXLayout"}),(0,d.kt)("h3",null,"场景"),(0,d.kt)("p",null,"场景: 假设高度已知, 请写出三栏布局, 其中左、右栏宽度各为 300 px, 中间自适应。本文针对这种场景罗列出以下几种方案。"),(0,d.kt)("h3",null,"float 布局"),(0,d.kt)("pre",null,(0,d.kt)("code",s({parentName:"pre"},{className:"language-html"}),'<body>\n  <style>\n    .left {\n      float: left;\n      background: red;\n      width: 300px;\n    }\n\n    .middle {\n      background: purple;\n    }\n\n    .right {\n      float: right;\n      background: green;\n      width: 300px;\n    }\n  </style>\n  <div class="left">float layout</div>\n  <div class="right">float layout</div>\n  <div class="middle">float layout</div>\n</body>\n')),(0,d.kt)("blockquote",null,(0,d.kt)("p",{parentName:"blockquote"},"float 布局要注意 ",(0,d.kt)("inlineCode",{parentName:"p"},'class="middle"')," 这行书写的位置")),(0,d.kt)("h3",null,"position 布局"),(0,d.kt)("pre",null,(0,d.kt)("code",s({parentName:"pre"},{className:"language-html"}),'<body>\n  <style>\n    .left {\n      background: red;\n      position: absolute;\n      left: 0;\n      width: 300px;\n    }\n\n    .middle {\n      position: absolute;\n      left: 300px;\n      right: 300px;\n      background: purple;\n    }\n\n    .right {\n      background: green;\n      position: absolute;\n      right: 0;\n      width: 300px;\n    }\n  </style>\n  <div class="left">position layout</div>\n  <div class="middle">position layout</div>\n  <div class="right">position layout</div>\n</body>\n')),(0,d.kt)("h3",null,"flex 布局"),(0,d.kt)("pre",null,(0,d.kt)("code",s({parentName:"pre"},{className:"language-html"}),'<style>\n  .flexbox {\n    display: flex;\n  }\n\n  .left {\n    background: red;\n    width: 300px;\n  }\n\n  .middle {\n    flex: 1;\n    background: purple;\n  }\n\n  .right {\n    background: green;\n    width: 300px;\n  }\n</style>\n<section class="flexbox">\n  <div class="left">flex layout</div>\n  <div class="middle">flex layout</div>\n  <div class="right">flex layout</div>\n</section>\n')),(0,d.kt)("blockquote",null,(0,d.kt)("p",{parentName:"blockquote"},"flex 布局是兼容性较好的布局")),(0,d.kt)("h3",null,"grid 布局"),(0,d.kt)("pre",null,(0,d.kt)("code",s({parentName:"pre"},{className:"language-html"}),'<body>\n  <style>\n    .gridbox {\n      display: grid;\n      grid-template-columns: 300px auto 300px;\n    }\n\n    .left {\n      background: red;\n    }\n\n    .middle {\n      background: purple;\n    }\n\n    .right {\n      background: green;\n    }\n  </style>\n  <section class="gridbox">\n    <div class="left">grid layout</div>\n    <div class="middle">grid layout</div>\n    <div class="right">grid layout</div>\n  </section>\n</body>\n')),(0,d.kt)("blockquote",null,(0,d.kt)("p",{parentName:"blockquote"},"使用 grid 目前记住 ",(0,d.kt)("inlineCode",{parentName:"p"},"columns-template-rows")," 和 ",(0,d.kt)("inlineCode",{parentName:"p"},"columns-template-columns"))),(0,d.kt)("h3",null,"table 布局"),(0,d.kt)("pre",null,(0,d.kt)("code",s({parentName:"pre"},{className:"language-html"}),'<body>\n  <style>\n    .tablebox {\n      display: table;\n      width: 100%;\n    }\n\n    .left {\n      display: table-cell;\n      background: red;\n      width: 300px;\n    }\n\n    .middle {\n      display: table-cell;\n      background: purple;\n    }\n\n    .right {\n      display: table-cell;\n      background: green;\n      width: 300px;\n    }\n  </style>\n  <section class="tablebox">\n    <div class="left">table layout</div>\n    <div class="middle">table layout</div>\n    <div class="right">table layout</div>\n  </section>\n</body>\n')),(0,d.kt)("blockquote",null,(0,d.kt)("p",{parentName:"blockquote"},"table 布局也是和 flex 布局一样兼容性较高的方案")),(0,d.kt)("h3",null,"其它解决方案"),(0,d.kt)("p",null,"针对两边宽度固定, 中间宽度自适应还有以下两种方案:"),(0,d.kt)("h4",null,"圣杯布局"),(0,d.kt)("p",null,"核心思想: 将内容两边宽度提前空出来, 然后将块级元素进行移动",(0,d.kt)("inlineCode",{parentName:"p"},"填补"),"。"),(0,d.kt)("pre",null,(0,d.kt)("code",s({parentName:"pre"},{className:"language-html"}),'<body>\n  <style>\n    .bd {\n      padding: 0 200px 0 200px;\n    }\n\n    .main {\n      float: left;\n      width: 100%;\n      height: 200px;\n      background-color: #ddd;\n    }\n    .left {\n      float: left;\n      width: 200px;\n      height: 200px;\n      background-color: #da4242;\n      /* 产生布局效果的属性 */\n      margin-left: -100%;\n      position: relative;\n      left: -200px;\n    }\n    .right {\n      float: left;\n      width: 200px;\n      height: 200px;\n      background-color: #4ddef1;\n      /* 产生布局效果的属性 */\n      margin-left: -200px;\n      position: relative;\n      left: 200px;\n    }\n  </style>\n  <div class="bd">\n    <div class="main">main</div>\n    <div class="left">left</div>\n    <div class="right">right</div>\n  </div>\n</body>\n')),(0,d.kt)("h4",null,"双飞翼布局"),(0,d.kt)("p",null,"核心思想: 将内容宽度占满父容器, 然后将块级元素进行移动",(0,d.kt)("inlineCode",{parentName:"p"},"覆盖"),"。"),(0,d.kt)("pre",null,(0,d.kt)("code",s({parentName:"pre"},{className:"language-html"}),'<body>\n  <style>\n    .main {\n      float: left;\n      width: 100%;\n      height: 200px;\n      background-color: #ddd;\n    }\n\n    .left {\n      float: left;\n      width: 200px;\n      height: 200px;\n      background-color: #da4242;\n      /* 产生布局效果的属性 */\n      margin-left: -100%;\n    }\n\n    .right {\n      float: left;\n      width: 200px;\n      height: 200px;\n      background-color: #4ddef1;\n      /* 产生布局效果的属性 */\n      margin-left: -200px;\n    }\n  </style>\n  <div class="main"></div>\n  <div class="left">left</div>\n  <div class="right">right</div>\n</body>\n')))}c.isMDXComponent=!0}}]);