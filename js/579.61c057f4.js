(self.webpackChunkblog=self.webpackChunkblog||[]).push([[579],{50579:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>k});var l=n(59713),r=n.n(l),a=n(6479),o=n.n(a),i=(n(67294),n(3905));function p(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?p(Object(n),!0).forEach((function(t){r()(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var u={};function k(e){var t=e.components,n=o()(e,["components"]);return(0,i.kt)("wrapper",c(c(c({},u),n),{},{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h3",null,"前端实时协议"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"websocket")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"poll"),"(轮询)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"long-poll"),"(长轮询): 场景: 移动端扫 pc 端二维码, 从而 pc 端完成登入")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"long-poll")," 的含义就是设定一定的超时时间进行挂起, 在这个时间范围内如果收到服务端的返回信息则发给客户端响应报文, 若超过这时间没有服务端的返回信息则再次发起 ",(0,i.kt)("inlineCode",{parentName:"p"},"long-poll")),(0,i.kt)("h3",null,"hybride 的通信"),(0,i.kt)("h4",null,"在 web 中调用 native"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"Native")," 先注册 ",(0,i.kt)("inlineCode",{parentName:"li"},"Schema")," 协议的 URL。在 app 的 JS 代码中请求该 URL 就能调用相应 Schema 中的原生方法"),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"addJavaScriptInterface"),": 这个是针对 android 的, 使用这个 api 添加的方法就能在 app 的 JS 代码里进行调用;")),(0,i.kt)("h4",null,"在 native 中调用 JS"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"loadUrl"))))}k.isMDXComponent=!0}}]);