(self.webpackChunkblog=self.webpackChunkblog||[]).push([[4101],{34101:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>p});var r=n(59713),o=n.n(r),l=n(6479),a=n.n(l),u=(n(67294),n(3905));function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o()(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var h={};function p(e){var t=e.components,n=a()(e,["components"]);return(0,u.kt)("wrapper",s(s(s({},h),n),{},{components:t,mdxType:"MDXLayout"}),(0,u.kt)("h3",null,"router 的简易实现"),(0,u.kt)("h3",null,"基于 hash 的实现"),(0,u.kt)("p",null,"以下为 ",(0,u.kt)("inlineCode",{parentName:"p"},"hashChange")," 的简版实现"),(0,u.kt)("pre",null,(0,u.kt)("code",s({parentName:"pre"},{className:"language-js"}),"class Router {\n  constructor() {\n    this.router = {}\n    window.addEventListener('hashchange', (e) => {\n      const tag = location.hash.slice(1)\n      this.router[tag] && this.router[tag]()\n    })\n  }\n\n  route(path, fn) {\n    this.router[path] = fn\n  }\n}\n\nconst router = new Router()\nconst changeColor = (color) => {\n  document.body.style.background = color\n}\nrouter.route('red', () => { changeColor('red') })\nrouter.route('yellow', () => { changeColor('yellow') })\nrouter.route('blue', () => { changeColor('blue') })\n")),(0,u.kt)("pre",null,(0,u.kt)("code",s({parentName:"pre"},{className:"language-html"}),'<ul>\n  <a href="#red">red</a>\n  <a href="#yellow">yellow</a>\n  <a href="#blue">blue</a>\n</ul>\n')),(0,u.kt)("h3",null,"基于 history 的实现"),(0,u.kt)("blockquote",null,(0,u.kt)("p",{parentName:"blockquote"},"以下代码需要运行在 http 端口。")),(0,u.kt)("pre",null,(0,u.kt)("code",s({parentName:"pre"},{className:"language-js"}),"class Router {\n  constructor() {\n    this.router = {}\n    window.addEventListener('popstate', (e) => {\n      const path = e.state.path\n      this.router[path] && this.router[path]()\n    })\n  }\n\n  route(path, fn) {\n    this.router[path] = fn\n  }\n\n  go(path) {\n    history.pushState({ path: path }, null, path) // 核心思路, pushState 进去的第一个对象会在点击回退/前进按钮时触发 popstate\n    this.router[path] && this.router[path]()\n  }\n}\n\nconst router = new Router()\nconst changeColor = (color) => {\n  document.body.style.background = color\n}\nrouter.route('red', () => { changeColor('red') })\nrouter.route('yellow', () => { changeColor('yellow') })\nrouter.route('blue', () => { changeColor('blue') })\ndocument.getElementsByTagName('ul')[0].addEventListener('click', (e) => {\n  router.go(e.target.innerText)\n})\n")),(0,u.kt)("pre",null,(0,u.kt)("code",s({parentName:"pre"},{className:"language-html"}),'<ul>\n  <li href="red">red</li>\n  <li href="yellow">yellow</li>\n  <li href="blue">blue</li>\n</ul>\n')),(0,u.kt)("h3",null,"路由的监听"),(0,u.kt)("ul",null,(0,u.kt)("li",{parentName:"ul"},"hash 路由")),(0,u.kt)("p",null,"window.addEventListener('hashchange')"),(0,u.kt)("ul",null,(0,u.kt)("li",{parentName:"ul"},"history 路由")),(0,u.kt)("h3",null,"参考"),(0,u.kt)("p",null,(0,u.kt)("a",s({parentName:"p"},{href:"https://juejin.im/post/5ac61da66fb9a028c71eae1b"}),"面试官: 你了解前端路由吗?")))}p.isMDXComponent=!0}}]);