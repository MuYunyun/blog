(self.webpackChunkblog=self.webpackChunkblog||[]).push([[9411],{19411:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>a});var r=n(59713),o=n.n(r),s=n(6479),p=n.n(s),c=(n(67294),n(3905));function u(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?u(Object(n),!0).forEach((function(t){o()(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):u(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var y={};function a(e){var t=e.components,n=p()(e,["components"]);return(0,c.kt)("wrapper",i(i(i({},y),n),{},{components:t,mdxType:"MDXLayout"}),(0,c.kt)("pre",null,(0,c.kt)("code",i({parentName:"pre"},{className:"language-js"}),"// 这个文件为上下文文件, 可以理解为承上启下作用\n// module.exports = {\n//   get query() {\n//     return this.request.query    // 比如这个 this.request 为 ./request.js 中的内容\n//   },\n\n//   set body(content) {\n//     this.response.body = content // 比如这个 this.response.body 为 ./response.js 的内容\n//   },\n\n//   get body() {\n//     return this.response.body\n//   },\n// }\n\n// 当 context 中属性越来越多, 我们可以使用 __defineGetter__ 以及 __defineSetter__\n// 属性封装相应方法来减少重复劳动, 日后要增加属性只要在数组中填入相应字段就行。\n\nconst proto = {}\n\nfunction set(type, property) {\n  proto.__defineSetter__(property, function(val) {\n    this[type][property] = val  // 这里 this 指向 proto, 原因指向调用函数的对象\n  })\n}\n\nfunction get(type, property) {\n  proto.__defineGetter__(property, function() {\n    return this[type][property]\n  })\n}\n\nconst setRequest = []\nconst getRequest = ['query']\nconst setResponse = ['body', 'statusCode']\nconst getResponse = ['body', 'statusCode']\n\ngetRequest.forEach(r => {\n  get('request', r)\n})\n\nsetResponse.forEach(r => {\n  set('response', r)\n})\n\ngetResponse.forEach(r => {\n  get('response', r)\n})\n\nmodule.exports = proto\n")))}a.isMDXComponent=!0}}]);