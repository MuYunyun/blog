(self.webpackChunkblog=self.webpackChunkblog||[]).push([[9803],{19803:n=>{n.exports="### 第二版测试: 封装 request,response,context 对象\n\n```js\nconst Koa = require('../application')\n\nconst app = new Koa()\n\n// // 测试自定义扩展\n// app.context.handle = function (errNo = 0, data, errMsg) {\n//   this.res.setHeader('Content-Type', 'application/json;charset=utf-8')\n//   // 注意 this 指向调用函数的对象, 也就是 ctx\n//   this.body = {\n//     errNo,\n//     data,\n//     errMsg\n//   }\n// }\n\n// // 调用自定义扩展\n// app.use(async (ctx) => {\n//   ctx.handle({\n//     errNo: 0,\n//     data: {\n//       name: '小明',\n//     },\n//     errMsg: 'success',\n//   })\n// })\n\n// 第二版最主要目的是把 app.use(req, res) 参数转化为简洁的写法如下:\napp.use(async (ctx) => {\n  ctx.body = `hello ${ctx.query.name}`\n})\n\napp.listen(3000, '127.0.0.1', () => {\n  console.log('listening on the 3000')\n})\n```"}}]);