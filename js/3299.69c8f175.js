(self.webpackChunkblog=self.webpackChunkblog||[]).push([[3299],{73299:n=>{n.exports="### 216.Combination_Sum_III\n\nFind all valid combinations of k numbers that sum up to n such that the following conditions are true:\n\n* Only numbers 1 through 9 are used.\n* `Each number is used at most once`.\n\nReturn a list of all possible valid combinations. The list must not contain the same combination twice, and the combinations may be returned in any order.\n\nExample 1:\n\n```js\nInput: k = 3, n = 7\nOutput: [[1,2,4]]\n\nExplanation:\n1 + 2 + 4 = 7\nThere are no other valid combinations.\n```\n\nExample 2:\n\n```js\nInput: k = 3, n = 9\nOutput: [[1,2,6],[1,3,5],[2,3,4]]\n\nExplanation:\n1 + 2 + 6 = 9\n1 + 3 + 5 = 9\n2 + 3 + 4 = 9\nThere are no other valid combinations.\n```\n\nExample 3:\n\n```js\nInput: k = 4, n = 1\nOutput: []\n\nExplanation: There are no valid combinations. [1,2,1] is not valid because 1 is used twice.\n```\n\nExample 4:\n\n```js\nInput: k = 3, n = 2\nOutput: []\n\nExplanation: There are no valid combinations.\n```\n\nExample 5:\n\n```js\nInput: k = 9, n = 45\nOutput: [[1,2,3,4,5,6,7,8,9]]\n\nExplanation:\n1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 = 45\n​​​​​​​There are no other valid combinations.\n```\n\nConstraints:\n\n* 2 <= k <= 9\n* 1 <= n <= 60\n\n### Analyze\n\n从题目 `Each number is used at most once` 得知, 该题属于组合问题。\n\n```js\n/**\n * @param {number} k\n * @param {number} n\n * @return {number[][]}\n */\nvar combinationSum3 = function(k, n) {\n  const result = []\n\n  recursive(k, n, 1, [], result)\n  return result\n};\n\nvar recursive = function(k, n, start, temp, result) {\n  if (n < 0 || temp.length > k) return\n  if (n === 0 && temp.length === k) {\n    result.push([...temp])\n    return\n  }\n\n  for (let i = start; i <= 9; i++) {\n    temp.push(i)\n    n = n - i\n    recursive(k, n, i + 1, temp, result)\n    n = n + i\n    temp.pop()\n  }\n}\n```\n\n### Sister Title\n\n39、40"}}]);