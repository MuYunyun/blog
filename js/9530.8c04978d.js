(self.webpackChunkblog=self.webpackChunkblog||[]).push([[9530],{49530:(e,n,t)=>{"use strict";t.r(n),t.d(n,{default:()=>s});var a=t(59713),l=t.n(a),o=t(6479),r=t.n(o),p=(t(67294),t(3905));function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){l()(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}var u={};function s(e){var n=e.components,t=r()(e,["components"]);return(0,p.kt)("wrapper",c(c(c({},u),t),{},{components:n,mdxType:"MDXLayout"}),(0,p.kt)("h3",null,(0,p.kt)("inlineCode",{parentName:"h3"},"Partial<T>")),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"Partial<T>"),": 意味 T 集合的子集;"),(0,p.kt)("h3",null,(0,p.kt)("inlineCode",{parentName:"h3"},"Pick<T, K>")),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"Pick<T, K>"),": 相对 ",(0,p.kt)("inlineCode",{parentName:"p"},"Partial<T>"),", ",(0,p.kt)("inlineCode",{parentName:"p"},"Pick<T, K>")," 限制了子集中必须含有 K 定义的类型字段。"),(0,p.kt)("pre",null,(0,p.kt)("code",c({parentName:"pre"},{className:"language-js"}),'interface Todo {\n  title: string;\n  description: string;\n  completed: boolean;\n}\ntype TodoPreview = Pick<Todo, "title" | "completed">;\nconst todo: TodoPreview = {\n  title: "Clean room",\n  completed: false\n};\n')),(0,p.kt)("h3",null,(0,p.kt)("inlineCode",{parentName:"h3"},"Readonly<T>")),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"Readonly<T>"),": T 中类型只读;"),(0,p.kt)("h3",null,(0,p.kt)("inlineCode",{parentName:"h3"},"Record<K, T>")),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"Record<K, T>"),": 建立 K 到 T 之间的 map 映射。"),(0,p.kt)("pre",null,(0,p.kt)("code",c({parentName:"pre"},{className:"language-js"}),'interface PageInfo {\n  title: string;\n}\ntype Page = "home" | "about" | "contact";\nconst x: Record<Page, PageInfo> = {\n  about: { title: "about" },\n  contact: { title: "contact" },\n  home: { title: "home" }\n};\n')),(0,p.kt)("h3",null,(0,p.kt)("inlineCode",{parentName:"h3"},"Omit<T, K>")),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"Omit<T, K>"),": 申明一个类型其在 T 类型中",(0,p.kt)("inlineCode",{parentName:"p"},"移除 K 中包含的属性值"),";"),(0,p.kt)("pre",null,(0,p.kt)("code",c({parentName:"pre"},{className:"language-js"}),'interface Todo {\n  title: string;\n  description: string;\n  completed: boolean;\n}\ntype TodoPreview = Omit<Todo, "description">;\nconst todo: TodoPreview = {\n  title: "Clean room",\n  completed: false\n};\n')),(0,p.kt)("h3",null,(0,p.kt)("inlineCode",{parentName:"h3"},"Exclude<T, U>")),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"Exclude<T, U>"),": 申明一个类型其在 T 类型中",(0,p.kt)("inlineCode",{parentName:"p"},"移除 U 中所包含的类型"),";"),(0,p.kt)("pre",null,(0,p.kt)("code",c({parentName:"pre"},{className:"language-js"}),'type T0 = Exclude<"a" | "b" | "c", "a">; // "b" | "c"\ntype T1 = Exclude<"a" | "b" | "c", "a" | "b">; // "c"\ntype T2 = Exclude<string | number | (() => void), Function>; // string | number\n')),(0,p.kt)("h3",null,(0,p.kt)("inlineCode",{parentName:"h3"},"NonNullable<T>")),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"NonNullable<T>"),": 申明一个类型其将 T 类型中的 null 与 undefined 移除;"),(0,p.kt)("h3",null,(0,p.kt)("inlineCode",{parentName:"h3"},"InstanceType<T>")),(0,p.kt)("p",null,(0,p.kt)("inlineCode",{parentName:"p"},"InstanceType<T>"),": 申明一个由构造函数实例类型组合而成的类型;"),(0,p.kt)("pre",null,(0,p.kt)("code",c({parentName:"pre"},{className:"language-js"}),"class C {\n  x = 0;\n  y = 0;\n}\ntype T0 = InstanceType<typeof C>; // C\ntype T1 = InstanceType<any>; // any\ntype T2 = InstanceType<never>; // any\ntype T3 = InstanceType<string>; // Error\ntype T4 = InstanceType<Function>; // Error\n")),(0,p.kt)("h3",null,"link"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("a",c({parentName:"li"},{href:"https://www.elsewebdevelopment.com/wp-content/uploads/typescript-3.7-utility-types-printable-cheatsheet.pdf"}),"utility-types"))))}s.isMDXComponent=!0}}]);