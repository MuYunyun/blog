(self.webpackChunkblog=self.webpackChunkblog||[]).push([[3156],{43156:(n,e,t)=>{"use strict";t.r(e),t.d(e,{default:()=>o});var r=t(59713),u=t.n(r),a=t(6479),l=t.n(a),p=(t(67294),t(3905));function s(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function i(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?s(Object(t),!0).forEach((function(e){u()(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}var m={};function o(n){var e=n.components,t=l()(n,["components"]);return(0,p.kt)("wrapper",i(i(i({},m),t),{},{components:e,mdxType:"MDXLayout"}),(0,p.kt)("h3",null,"47.Permutations_II"),(0,p.kt)("p",null,"Given a collection of numbers, nums, that might contain duplicates, return all possible unique permutations in any order."),(0,p.kt)("p",null,"Example 1:"),(0,p.kt)("pre",null,(0,p.kt)("code",i({parentName:"pre"},{className:"language-js"}),"Input: nums = [1,1,2]\nOutput:\n[[1,1,2],\n [1,2,1],\n [2,1,1]]\n")),(0,p.kt)("p",null,"Example 2:"),(0,p.kt)("pre",null,(0,p.kt)("code",i({parentName:"pre"},{className:"language-js"}),"Input: nums = [1,2,3]\nOutput: [[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]\n")),(0,p.kt)("p",null,"Constraints:"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"1 <= nums.length <= 8"),(0,p.kt)("li",{parentName:"ul"},"-10 <= nums","[i]"," <= 10")),(0,p.kt)("h3",null,"analyze"),(0,p.kt)("p",null,"[1 1 2]"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"1",(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"1",(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"2"))),(0,p.kt)("li",{parentName:"ul"},"2",(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"1"))))),(0,p.kt)("li",{parentName:"ul"},"1 (jump, 该位置上 1 已经在之前被使用过了, 因此需跳过)"),(0,p.kt)("li",{parentName:"ul"},"2",(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"1",(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"1"))),(0,p.kt)("li",{parentName:"ul"},"1 (jump)")))),(0,p.kt)("p",null,"思路: 回溯法解排列问题。"),(0,p.kt)("p",null,"需要注意此题允许 nums 里面存有相同的数字。在此引入 ",(0,p.kt)("inlineCode",{parentName:"p"},"used")," 数组来存储回溯过程中已使用的值。"),(0,p.kt)("pre",null,(0,p.kt)("code",i({parentName:"pre"},{className:"language-js"}),"/**\n * @param {number[]} nums\n * @return {number[][]}\n */\nvar permuteUnique = function (nums) {\n  const res = []\n  backtracking(nums, [], [], res)\n  return res\n};\n\nvar backtracking = function(nums, used, temp, res) {\n  if (temp.length === nums.length) {\n    for (let i = 0; i < res.length; i++) {\n      // a digit appears only once.\n      if (res[i].toString() === temp.toString()) return\n    }\n    res.push([...temp])\n    return\n  }\n\n  for (let i = 0; i < nums.length; i++) {\n    // jump same used index.\n    if (used.indexOf(i) > -1) continue\n    temp.push(nums[i])\n    used.push(i)\n    backtracking(nums, used, temp, res)\n    temp.pop(nums[i])\n    used.pop(i)\n  }\n}\n")),(0,p.kt)("p",null,"上述解法在去重的步骤上比较耗时, 提交的时候报超时错误, 进行如下优化:"),(0,p.kt)("pre",null,(0,p.kt)("code",i({parentName:"pre"},{className:"language-js"}),"/**\n * @param {number[]} nums\n * @return {number[][]}\n */\nvar permuteUnique = function (nums) {\n  const res = []\n  const sortNums = nums.sort((r1, r2) => r1 - r2)\n  backtracking(sortNums, [], [], res)\n  return res\n};\n\nvar backtracking = function(nums, used, temp, res) {\n  if (temp.length === nums.length) {\n    res.push([...temp])\n    return\n  }\n\n  for (let i = 0; i < nums.length; i++) {\n    // 如果当前下标被使用过或者当前下标对应的值已经在之前被使用过了, 则跳过。\n    if (used.indexOf(i) > -1 || (nums[i] === nums[i - 1] && used.indexOf(i - 1) === -1)) continue\n    temp.push(nums[i])\n    used.push(i)\n    backtracking(nums, used, temp, res)\n    temp.pop(nums[i])\n    used.pop(i)\n  }\n}\n")))}o.isMDXComponent=!0}}]);