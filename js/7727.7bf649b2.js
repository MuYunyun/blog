(self.webpackChunkblog=self.webpackChunkblog||[]).push([[7727],{67727:(n,t,e)=>{"use strict";e.r(t),e.d(t,{default:()=>i});var r=e(59713),l=e.n(r),u=e(6479),a=e.n(u),c=(e(67294),e(3905));function o(n,t){var e=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),e.push.apply(e,r)}return e}function p(n){for(var t=1;t<arguments.length;t++){var e=null!=arguments[t]?arguments[t]:{};t%2?o(Object(e),!0).forEach((function(t){l()(n,t,e[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(e)):o(Object(e)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(e,t))}))}return n}var s={};function i(n){var t=n.components,e=a()(n,["components"]);return(0,c.kt)("wrapper",p(p(p({},s),e),{},{components:t,mdxType:"MDXLayout"}),(0,c.kt)("h3",null,"重构改善既有代码的设计"),(0,c.kt)("p",null,"本文是重构改善既有代码的设计阅读笔记"),(0,c.kt)("h3",null,"重构与性能优化"),(0,c.kt)("ul",null,(0,c.kt)("li",{parentName:"ul"},"重构: 目标是更易理解;(面向人)"),(0,c.kt)("li",{parentName:"ul"},"性能优化: 目标是使程序运行更快;(面向机器)")),(0,c.kt)("h3",null,"重构的好处"),(0,c.kt)("ol",null,(0,c.kt)("li",{parentName:"ol"},"帮助快速找到 bug"),(0,c.kt)("li",{parentName:"ol"},"提高编程速度")),(0,c.kt)("h3",null,"重构手段"),(0,c.kt)("h4",null,"提炼函数(Extract Function)"),(0,c.kt)("p",null,"背景: 一整段函数不利于阅读;\n方式: 按语义进行重构, 将不利于阅读的函数其拆分成小份, 并给它们取上恰当的名字以便于阅读;"),(0,c.kt)("h4",null,"内联函数(Inline Function)"),(0,c.kt)("p",null,"背景: 函数拆得太细, 和提炼函数相反的一种重构手段;\n方式: 可以逐行替换;"),(0,c.kt)("h4",null,"函数重命名"),(0,c.kt)("p",null,"当希望修改的函数名存在大量使用时, 可以采用渐进式的做法(旧代码调用旧函数, 旧函数调用新函数)对函数重命名:"),(0,c.kt)("pre",null,(0,c.kt)("code",p({parentName:"pre"},{className:"language-js"}),"function circum(radius) {\n  return 2 * Math.PI * radius\n}\n")),(0,c.kt)("pre",null,(0,c.kt)("code",p({parentName:"pre"},{className:"language-js"}),"function circum(radius) {\n  return circumference(radius)\n}\n\nfunction circumference(radius) {\n  return 2 * Math.PI * radius\n}\n")),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"如何给一个 function 起好名字: 先给 function 写一段注释, 再把该注释压缩为函数的名字。")),(0,c.kt)("h4",null,"统一访问原则"),(0,c.kt)("pre",null,(0,c.kt)("code",p({parentName:"pre"},{className:"language-js"}),"class Test {\n  a() {\n    return 'a'\n  }\n\n  get b() {\n    return 'b'\n  }\n}\n\nvar test = new Test()\n\ntest.a() // 'a'\ntest.b   // 'b'\n")),(0,c.kt)("p",null,"推崇 ",(0,c.kt)("inlineCode",{parentName:"p"},"get")," 的写法, 用户调用该类的时候无需关系是字段还是推演计算的值。"),(0,c.kt)("p",null,"当前阅读到: 拆分阶段。"))}i.isMDXComponent=!0}}]);