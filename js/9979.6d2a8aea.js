(self.webpackChunkblog=self.webpackChunkblog||[]).push([[9979],{29979:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>k});var r=n(59713),l=n.n(r),a=n(6479),o=n.n(a),p=(n(67294),n(3905));function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function u(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){l()(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var c={};function k(e){var t=e.components,n=o()(e,["components"]);return(0,p.kt)("wrapper",u(u(u({},c),n),{},{components:t,mdxType:"MDXLayout"}),(0,p.kt)("p",null,"来看为什么有如下 api:"),(0,p.kt)("h3",null,"call/put"),(0,p.kt)("p",null,"本质目的是让测试用例不必再发起多一次函数调用, 取而代之转为比较对象是否相同。"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"使用 ",(0,p.kt)("inlineCode",{parentName:"li"},"call")," 替代使用 ",(0,p.kt)("inlineCode",{parentName:"li"},"fetch")),(0,p.kt)("li",{parentName:"ul"},"使用 ",(0,p.kt)("inlineCode",{parentName:"li"},"put")," 替代使用 ",(0,p.kt)("inlineCode",{parentName:"li"},"dispatch{action}"))),(0,p.kt)("h3",null,"fork"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"使用 ",(0,p.kt)("inlineCode",{parentName:"li"},"fork"),": 模拟多个线程")),(0,p.kt)("h3",null,"redux-saga 相较于 redux-thunk 的一些优点"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"对测试用例较为友好(比较函数和传入参数)"),(0,p.kt)("li",{parentName:"ul"},"对异步操作流程的操作颗粒度更加细")))}k.isMDXComponent=!0}}]);