(self.webpackChunkblog=self.webpackChunkblog||[]).push([[2047],{22047:(n,e,t)=>{"use strict";t.r(e),t.d(e,{default:()=>i});var r=t(59713),a=t.n(r),l=t(6479),p=t.n(l),o=(t(67294),t(3905));function s(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function u(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?s(Object(t),!0).forEach((function(e){a()(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}var c={};function i(n){var e=n.components,t=p()(n,["components"]);return(0,o.kt)("wrapper",u(u(u({},c),t),{},{components:e,mdxType:"MDXLayout"}),(0,o.kt)("h3",null,"题目: 反转字符串"),(0,o.kt)("p",null,"编写一个函数，其作用是将输入的",(0,o.kt)("inlineCode",{parentName:"p"},"字符串反转过来"),"。输入字符串以字符数组 char[] 的形式给出。"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"不要给另外的数组分配额外的空间，你必须原地修改输入数组、使用 O(1) 的额外空间解决这一问题"),"。"),(0,o.kt)("p",null,"你可以假设数组中的所有字符都是 ASCII 码表中的可打印字符。"),(0,o.kt)("p",null,"示例 1："),(0,o.kt)("pre",null,(0,o.kt)("code",u({parentName:"pre"},{className:"language-js"}),'输入：["h","e","l","l","o"]\n输出：["o","l","l","e","h"]\n')),(0,o.kt)("p",null,"示例 2："),(0,o.kt)("pre",null,(0,o.kt)("code",u({parentName:"pre"},{className:"language-js"}),'输入：["H","a","n","n","a","h"]\n输出：["h","a","n","n","a","H"]\n')),(0,o.kt)("h3",null,"解题"),(0,o.kt)("p",null,"方法一: 使用数组的 ",(0,o.kt)("inlineCode",{parentName:"p"},"reverse")," 方法。"),(0,o.kt)("pre",null,(0,o.kt)("code",u({parentName:"pre"},{className:"language-js"}),"/**\n * @param {character[]} s\n * @return {void} Do not return anything, modify s in-place instead.\n */\nvar reverseString = function(s) {\n    s.reverse()\n}\n")),(0,o.kt)("p",null,"方法二: ",(0,o.kt)("inlineCode",{parentName:"p"},"指针碰撞")),(0,o.kt)("pre",null,(0,o.kt)("code",u({parentName:"pre"},{className:"language-js"}),"/**\n * @param {character[]} s\n * @return {void} Do not return anything, modify s in-place instead.\n */\nvar reverseString = function(s) {\n  let left = 0, right = s.length - 1\n\n  while (left <= right) {\n    swap(s, left, right)\n    left++\n    right--\n  }\n}\n\n/* 交换位置\n  nums 数组, a, b 为下标\n*/\nvar swap = function(nums, a, b) {\n  const tmp = nums[a]\n  nums[a] = nums[b]\n  nums[b] = tmp\n}\n")),(0,o.kt)("h3",null,"相似问题"),(0,o.kt)("p",null,"125、167、345"))}i.isMDXComponent=!0}}]);