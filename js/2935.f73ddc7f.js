(self.webpackChunkblog=self.webpackChunkblog||[]).push([[2935],{52935:(e,t,a)=>{"use strict";a.r(t),a.d(t,{default:()=>c});var n=a(59713),l=a.n(n),r=a(6479),i=a.n(r),p=(a(67294),a(3905));function u(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function m(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?u(Object(a),!0).forEach((function(t){l()(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):u(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}var k={};function c(e){var t=e.components,a=i()(e,["components"]);return(0,p.kt)("wrapper",m(m(m({},k),a),{},{components:t,mdxType:"MDXLayout"}),(0,p.kt)("h3",null,"Canvas"),(0,p.kt)("p",null,"因为 Canvas 相对更加底层, 在处理图像交互上更具优势, 也因此目前市面上看到的 Web 端图表库基本都是基于 Canvas 进行绘制的。"),(0,p.kt)("h3",null,"API"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"线性渐变"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"createLinearGradient(x0: number, y0: number, x1: number, y1: number)"),(0,p.kt)("li",{parentName:"ul"},"addColorStop(offset: number, color: string): void"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"径向渐变"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"createRadialGradient(x0: number, y0: number, r0: number, x1: number, y1: number, r1: number)"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"路径"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"开始一段新路径: ctx.beginPath()"),(0,p.kt)("li",{parentName:"ul"},"开始: ctx.moveTo(x, y)"),(0,p.kt)("li",{parentName:"ul"},"经过: ctx.lineTo(x, y)"),(0,p.kt)("li",{parentName:"ul"},"路径为线: ctx.stroke()"),(0,p.kt)("li",{parentName:"ul"},"设置线的颜色: ctx.strokeStyle = gradient"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"曲线"),": ctx.bezierCurveTo(cplx, cp1y, cp2x, cp2y, x, y)"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"圆"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"ctx.arc(x, y, radius, startAngle, endAngle ","[, counterclockwise]",")"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"方形"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"ctx.fillRect(x, y, width, height)"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"画布的变换"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"注意: 画布变换的操作需要前置。"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"画布平移"),": ctx.translate(x, y)"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"画布旋转"),": ctx.rotate(Math.PI / 180 * 10): 旋转 10°"),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"画布缩放"),": ctx.scale(x, y)",(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"沿原点镜像: ctx.scale(-1, -1)"),(0,p.kt)("li",{parentName:"ul"},"沿 x 轴镜像: ctx.scale(1, -1)"),(0,p.kt)("li",{parentName:"ul"},"沿 y 轴镜像: ctx.scale(-1, 1)"))))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"状态"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"ctx.save()"),(0,p.kt)("li",{parentName:"ul"},"ctx.restore()"))),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("inlineCode",{parentName:"li"},"文字"),(0,p.kt)("ul",{parentName:"li"},(0,p.kt)("li",{parentName:"ul"},"在 (x, y) 位置绘制文字: ctx.fillText('文字', x, y)"),(0,p.kt)("li",{parentName:"ul"},"测量文字: ctx.measureText('文字')")))))}c.isMDXComponent=!0}}]);