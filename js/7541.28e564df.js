(self.webpackChunkblog=self.webpackChunkblog||[]).push([[7541],{37541:n=>{n.exports="### 折线图绘制思路\n\n* 绘制坐标轴\n  * 利用 Canvas 画布缩放的能力\n\n![](http://with.muyunyun.cn/3cddc860aa1d667d3e80744702fc8d1f.jpg-muyy)\n\n```js\nconst createCoordinateSystem = () => {\n  context.scale(1, -1)\n  context.translate(0, -height)\n\n  context.beginPath()\n  context.moveTo(0, 0)\n  context.lineTo(width, 0)\n  context.stroke()\n  context.strokeStyle = '#000'\n\n  context.beginPath()\n  context.moveTo(0, 0)\n  context.lineTo(0, height)\n  context.stroke()\n  context.strokeStyle = '#000'\n}\n```\n\n* 绘制平行 X 轴的线条\n\n![](http://with.muyunyun.cn/978bbe881bdf396138967c982cefc793.jpg-muyy)\n\n```js\nfor (let i = 0; i < 6; i++) {\n  context.translate(0, 30)\n  createLine(0, 0, width, 0)\n}\n```\n\n* 绘制刻度\n\n![](http://with.muyunyun.cn/24cffb873d13e569b67340ab474dc2bf.jpg-muyy)\n\n```js\ncontext.save()\n// 绘制坐标轴\n...\n\ncontext.restore()\nfor (let i = 0; i < 8; i++) {\n  createLine(0, 0, 0, -5)\n  context.lineWidth = 0.2\n  context.translate(45, 0)\n}\n```\n\n* 绘制 x 轴下方文字\n\n![](http://with.muyunyun.cn/669b57db2cdd078a375c1ba871c35cf1.jpg-muyy)\n\n```js\n// 绘制 x 轴下方文字\nctx.save()\nctx.scale(1, -1)\nfor (let i = 0; i < xArr.length; i++) {\n  ctx.fillStyle = '#000'\n  if (i === 0) {\n    const textWidth = ctx.measureText(xArr[i])\n    ctx.translate(perXLength / 2 - textWidth.width / 2, 15)\n  } else {\n    ctx.translate(perXLength, 0)\n  }\n  ctx.fillText(xArr[i], 0, 0)\n}\nctx.restore()\n```\n\n* 绘制折线与圆\n\n```js\n// 绘制折线\nctx.save()\nfor (let i = 0; i < xArr.length - 1; i++) {\n  ctx.fillStyle = '#000'\n  const curPointX = (1 / 2 + i) * perXLength\n  const curPointY = valueArr[i]\n  const nextPointX = (1 / 2 + i + 1) * perXLength\n  const nextPointY = valueArr[i + 1]\n  this.drawLine({ ctx: ctx, x0: curPointX, y0: curPointY, x1: nextPointX, y1: nextPointY })\n}\nctx.restore()\n\n// 绘制圆\nctx.save()\nfor (let i = 0; i < xArr.length - 1; i++) {\n  ctx.fillStyle = '#000'\n  const pointX = (1 / 2 + i + 1) * perXLength\n  const pointY = valueArr[i + 1]\n  ctx.beginPath()\n  ctx.arc(pointX, pointY, 2, 0, Math.PI * 2, true)\n  ctx.stroke()\n}\nctx.restore()\n```\n\n> todo: 平滑的折线图: https://juejin.cn/post/6950684708443258894#heading-23"}}]);