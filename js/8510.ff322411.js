(self.webpackChunkblog=self.webpackChunkblog||[]).push([[8510],{78510:(n,e,t)=>{"use strict";t.r(e),t.d(e,{default:()=>u});var l=t(59713),r=t.n(l),o=t(6479),p=t.n(o),a=(t(67294),t(3905));function c(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(n);e&&(l=l.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,l)}return t}function d(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?c(Object(t),!0).forEach((function(e){r()(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}var i={};function u(n){var e=n.components,t=p()(n,["components"]);return(0,a.kt)("wrapper",d(d(d({},i),t),{},{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h3",null,"BFC 含义"),(0,a.kt)("p",null,"块级格式化上下文(Block Formatting Context)"),(0,a.kt)("h3",null,"BFC 特性"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"同一个 BFC 内元素外边距会发生重合(见案例一)"),(0,a.kt)("li",{parentName:"ul"},"BFC 内可以有浮动元素(见案例二)"),(0,a.kt)("li",{parentName:"ul"},"BFC 内可以分离浮动元素(见案例三)")),(0,a.kt)("h4",null,"案例一"),(0,a.kt)("pre",null,(0,a.kt)("code",d({parentName:"pre"},{className:"language-html"}),"<style>\n  div {\n    width: 100px;\n    height: 100px;\n    background-color: red;\n    margin: 100px;\n  }\n</style>\n\n<body>\n  <div></div>\n  <div></div>\n</body>\n")),(0,a.kt)("p",null,(0,a.kt)("img",d({parentName:"p"},{src:"http://with.muyunyun.cn/4e86e658780009017a22bbb025043276.jpg-300",alt:null}))),(0,a.kt)("p",null,"可以看到此时两个 div 之间的间距并不是 200px, 而是 100px"),(0,a.kt)("p",null,"此时可以在父节点加上 ",(0,a.kt)("inlineCode",{parentName:"p"},"overflow: hidden")," 使其变为 BFC 元素, 从而避免重叠。"),(0,a.kt)("pre",null,(0,a.kt)("code",d({parentName:"pre"},{className:"language-html"}),"<style>\n  div {\n    overflow: hidden;\n  }\n  p {\n    width: 100px;\n    height: 100px;\n    background-color: red;\n    margin: 100px;\n  }\n</style>\n\n<body>\n  <div>\n    <p></p>\n  </div>\n  <div>\n    <p></p>\n  </div>\n</body>\n")),(0,a.kt)("p",null,(0,a.kt)("img",d({parentName:"p"},{src:"http://with.muyunyun.cn/ffa04ee49e9b4d221361929324236c05.jpg-300",alt:null}))),(0,a.kt)("p",null,"此时, 可以看到两个 div 之间的距离已变为期望的 200 px；"),(0,a.kt)("h4",null,"案例二"),(0,a.kt)("pre",null,(0,a.kt)("code",d({parentName:"pre"},{className:"language-html"}),'<style>\n  .border {\n    border: 1px solid #000;\n  }\n  .content {\n    width: 100px;\n    height: 100px;\n    background-color: red;\n    float: left;\n  }\n</style>\n\n<body>\n  <div class="border">\n    <p class="content"></p>\n  </div>\n</body>\n')),(0,a.kt)("p",null,"子节点加上 ",(0,a.kt)("inlineCode",{parentName:"p"},"float: left")," 后, 其脱离了文档流, 所以只看到一条 1px 的线条, 如下:"),(0,a.kt)("p",null,(0,a.kt)("img",d({parentName:"p"},{src:"http://with.muyunyun.cn/6b657c7f8d985992c97269fb61bb8678.jpg-300",alt:null}))),(0,a.kt)("p",null,"此时在父节点中加上 ",(0,a.kt)("inlineCode",{parentName:"p"},"overflow: hidden")," 使其变为 BFC 元素从而消除浮动, 代码如下:"),(0,a.kt)("pre",null,(0,a.kt)("code",d({parentName:"pre"},{className:"language-html"}),'<style>\n  .border {\n    border: 1px solid #000;\n    overflow: hidden;  // 在此处加上 overflow: hidden; 可以消除浮动\n  }\n  .content {\n    width: 100px;\n    height: 100px;\n    background-color: #ff0000;\n    float: left;\n  }\n</style>\n\n<body>\n  <div class="border">\n    <p class="content"></p>\n  </div>\n</body>\n')),(0,a.kt)("p",null,(0,a.kt)("img",d({parentName:"p"},{src:"http://with.muyunyun.cn/6bde303c9e6c57a7d1ce73543d4c8dcc.jpg-300",alt:null}))),(0,a.kt)("h4",null,"案例三"),(0,a.kt)("pre",null,(0,a.kt)("code",d({parentName:"pre"},{className:"language-html"}),'<style>\n  .content1 {\n    width: 100px;\n    height: 100px;\n    background-color: red;\n    float: left;\n  }\n\n  .content2 {\n    width: 200px;\n    height: 200px;\n    background-color: green;\n  }\n</style>\n\n<body>\n  <div class="content1"></div>\n  <div class="content2"></div>\n</body>\n')),(0,a.kt)("p",null,"相邻节点中的一个节点使用 ",(0,a.kt)("inlineCode",{parentName:"p"},"float: left"),", 其脱离文档流, 从而两个 div 标签发生了重叠,"),(0,a.kt)("p",null,(0,a.kt)("img",d({parentName:"p"},{src:"http://with.muyunyun.cn/c7ebcfce5a7c58142fc9004a7d545852.jpg-300",alt:null}))),(0,a.kt)("p",null,"此时在普通流节点上使用 ",(0,a.kt)("inlineCode",{parentName:"p"},"overflow: hidden")," 使其变为 BFC 元素从而使 BFC 元素和浮动元素分离:"),(0,a.kt)("pre",null,(0,a.kt)("code",d({parentName:"pre"},{className:"language-html"}),'<style>\n  .content1 {\n    width: 100px;\n    height: 100px;\n    background-color: red;\n    float: left;\n  }\n\n  .content2 {\n    width: 200px;\n    height: 200px;\n    background-color: green;\n    overflow: hidden;\n  }\n</style>\n\n<body>\n  <div class="content1"></div>\n  <div class="content2"></div>\n</body>\n')),(0,a.kt)("p",null,(0,a.kt)("img",d({parentName:"p"},{src:"http://with.muyunyun.cn/cb83333e3e31f59d4946e0d3cdd2a56a.jpg-300",alt:null}))),(0,a.kt)("h3",null,"如何触发 BFC"),(0,a.kt)("pre",null,(0,a.kt)("code",d({parentName:"pre"},{}),"* overflow: 不为 visible;\n* position: 不为 static 以及 relative;\n* float: 不为 none;\n* display: 为 inline-box、table-ceil、flex;\n")))}u.isMDXComponent=!0}}]);