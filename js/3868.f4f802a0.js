(self.webpackChunkblog=self.webpackChunkblog||[]).push([[3868],{33868:n=>{n.exports="### 笔记系列 —— Node.js 源码是如何执行的\n\n### 如何调试 node 源码 （IDE 选择和断点调试）\n\n1. clone 源码到本地\n\n2. c/c++ 3 步编译安装法, [参考](https://my.oschina.net/surjur/blog/349464)\n\n```c\n./configure --debug   // 会生成 node/out/Debug 文件\nmake -j4              // -j4 为启用 4 个作业\nmake install\n```\n\n3. 根目录下创建测试文件 test.js\n\n```js\nconst fs = require('fs')\n\nfs.readFile('./node.gyp', {encoding: 'utf-8'}, function (e, content) {\n  console.log(content)\n})\n```\n\n4. IDE 使用 clion, 配置 Run -> Edit Configureations, 配置内容如下:\n\n* 选择 out/Debug/node 作为执行文件\n* 添加 test.js 作为命令行参数, 也可以添加 node 的其他参数, 比如 --expose-gc\n* Before launch 栏中 build 去掉\n\n![](http://with.muyunyun.cn/747aa17d5be5e261b7a580c10880365f.jpg-400)\n\n5. 点击 OK 按钮即完成配置, 在 src/node_file.cc 的 1592 行 static void Read(const FunctionCallbackInfo<Value>& args) 增加断点, 此时 Run -> Debug 'node' 即可进入调试界面\n\n### 编译步骤\n\n"}}]);