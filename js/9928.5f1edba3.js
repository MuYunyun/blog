(self.webpackChunkblog=self.webpackChunkblog||[]).push([[9928],{19928:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>m});var l=n(59713),a=n.n(l),r=n(6479),u=n.n(r),p=(n(67294),n(3905));function k(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?k(Object(n),!0).forEach((function(t){a()(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):k(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var i={};function m(e){var t=e.components,n=u()(e,["components"]);return(0,p.kt)("wrapper",o(o(o({},i),n),{},{components:t,mdxType:"MDXLayout"}),(0,p.kt)("p",null,"这是一套基本的由浅入深考察前端知识体系的清单, 自测用:"),(0,p.kt)("h3",null,"CSS"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"什么是 CSS 盒模型")),(0,p.kt)("pre",null,(0,p.kt)("code",o({parentName:"pre"},{}),"包含 content, margin, border, padding\n")),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"标准模型和 IE 模型有什么不同")),(0,p.kt)("pre",null,(0,p.kt)("code",o({parentName:"pre"},{}),"是否将 padding 和 border 算进 content 的 width 中, 即在 IE 模型下, padding 和 border 会挤压 content 的空间\n")),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"CSS 如何设置这两种模型")),(0,p.kt)("pre",null,(0,p.kt)("code",o({parentName:"pre"},{className:"language-css"}),"box-sizing: content-box; // 标准模型(默认)\nbox-sizing: border-box;  // IE模型\n")),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"JS 如何设置获取盒模型对应的宽和高")),(0,p.kt)("pre",null,(0,p.kt)("code",o({parentName:"pre"},{className:"language-js"}),"dom.style.width             // 只支持内联样式\ndom.currentStyle.width      // 只有 IE 支持\nwindow.getComputedStyle\ndom.getBoundingClientRect\n")),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"如何实现垂直居中")),(0,p.kt)("p",null,"见 ",(0,p.kt)("a",o({parentName:"p"},{href:"https://github.com/MuYunyun/blog/blob/master/BasicSkill/css/%E6%B0%B4%E5%B9%B3%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD.html"}),"垂直居中")),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"Flex 布局居中")),(0,p.kt)("pre",null,(0,p.kt)("code",o({parentName:"pre"},{className:"language-css"}),"justify-content: center； // 水平居中\nalign-item: center;       // 垂直居中\n")),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},"BFC 的基本概念")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},"BFC 的原理")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},"如何创建 BFC"))),(0,p.kt)("p",null,"前三个问题的解答看: ",(0,p.kt)("a",o({parentName:"p"},{href:"https://github.com/MuYunyun/blog/blob/master/BasicSkill/css/%E8%81%8A%E8%81%8ABFC.md"}),"聊聊 BFC"),", 对如何创建 BFC 这个问题答主水平有限, 只实验了 overflow:hidden 这个属性, 个人建议回答好 BFC 原理即可。"),(0,p.kt)("h3",null,"DOM 事件类"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"DOM 事件的级别了解吗")),(0,p.kt)("pre",null,(0,p.kt)("code",o({parentName:"pre"},{}),"DOM0: dom.onClick\nDOM2: dom.addEventListener('click', () => {}, false)\nDOM3: 在 1 的基础上加了鼠标键盘事件\n")),(0,p.kt)("blockquote",null,(0,p.kt)("p",{parentName:"blockquote"},"dom.addEventListener() 的第二个参数能跟 ",(0,p.kt)("inlineCode",{parentName:"p"},"{ handleEvent: () => {} }"))),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"DOM 事件模型了解吗")),(0,p.kt)("pre",null,(0,p.kt)("code",o({parentName:"pre"},{}),"存在冒泡阶段和捕获阶段\n")),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"DOM 事件流了解吗")),(0,p.kt)("pre",null,(0,p.kt)("code",o({parentName:"pre"},{}),"事件通过捕获到目标阶段, 目标阶段再进行冒泡\n")),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"描述 DOM 事件捕获的具体流程")),(0,p.kt)("pre",null,(0,p.kt)("code",o({parentName:"pre"},{}),"事件捕获 => window => document => html => body => 目标元素\n")),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"讲一下事件委托(事件代理)")),(0,p.kt)("pre",null,(0,p.kt)("code",o({parentName:"pre"},{}),"将绑定在子元素的事件绑定到父元素上, 然后可以通过 e.target 取到目标节点\n")),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"自定义事件了解吗")),(0,p.kt)("pre",null,(0,p.kt)("code",o({parentName:"pre"},{className:"language-js"}),"var event = new Event('custom')\ndom.addEventListener('custom', () => {})\ndom.dispatchEvent(event)\n")),(0,p.kt)("h3",null,"类型转换"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"了解显式转换、隐式转换吗？")),(0,p.kt)("pre",null,(0,p.kt)("code",o({parentName:"pre"},{}),"显示转换:\n隐式转换: 四则运算、if 语句、native 调用(console.log())\n")),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"了解显式转换的过程吗")),(0,p.kt)("h3",null,"HTTP 相关"),(0,p.kt)("blockquote",null,(0,p.kt)("p",{parentName:"blockquote"},"见 ",(0,p.kt)("a",o({parentName:"p"},{href:"https://github.com/MuYunyun/blog/blob/master/BasicSkill/http/http.md"}),"https://github.com/MuYunyun/blog/blob/master/BasicSkill/http/http.md"))),(0,p.kt)("h3",null,"原型链类"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},"创建对象有几种方法")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},"聊聊原型、构造函数、实例、原型链")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},"instanceof 的原理了解吗")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},"new 运算符的原理了解吗"))),(0,p.kt)("pre",null,(0,p.kt)("code",o({parentName:"pre"},{className:"language-js"}),"const new2 = function(func) {\n  const o = Object.create(func.prototype)\n  const result = func.call(o)\n  if (typeof(result) === 'object') {\n    return result\n  } else {\n    return o\n  }\n}\n")),(0,p.kt)("h3",null,"面向对象类"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},"如何进行类的声明")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},"如何生成实例")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},"如何实现继承")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},"各继承方式的优缺点"))),(0,p.kt)("h3",null,"通信类"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},"什么是同源策略及限制")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},"如何创建 Ajax"))),(0,p.kt)("pre",null,(0,p.kt)("code",o({parentName:"pre"},{className:"language-js"}),"const xhr = new HttpRequest()\n\nxhr.open('Get', '/abc', false)\nxhr.onreadystatechange = function() {\n  if (xhr.readyState === 4) {\n    if (xhr.status === 200 || xhr.status === 304) {\n      console.log(xhr.responseText)\n    }\n  }\n}\n\nxhr.send(null)\n")),(0,p.kt)("p",null,"甚至可以结合 Promise 与 HttpRequest 来封装 fetch。"),(0,p.kt)("pre",null,(0,p.kt)("code",o({parentName:"pre"},{className:"language-js"}),"function fetch(url) {\n  return new Promise((resolve, reject) => {\n    var xhr = new XMLHttpRequest()\n    xhr.open('GET', url, true)\n    xhr.onreadystatechange = function() {\n      if (this.readyState === 4 && this.status === 200) {\n        resolve(this.responseText)\n      } else {\n        reject(new Error(this.status))\n      }\n    }\n    xhr.send(null)\n  })\n}\n\nfetch('/post.json')\n  .then((fulfilled) => {\n    console.log(fulfilled)\n  })\n  .catch((rejected) => {\n    console.log(rejected)\n  })\n")),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"跨域通信的几种方式")),(0,p.kt)("h3",null,"安全类"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},"了解 CSRF 吗 ？ 如何防止 CSRF")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},"了解 XSS 吗 ？ 如何防止 XSS")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},"session 与 token 有什么区别")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},"session(会话) 存放在服务端, 每次打开网站就产生一个 session, 注销网站, session 就会销毁")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},"token(令牌) 通常是由",(0,p.kt)("inlineCode",{parentName:"p"},"密码"),"、",(0,p.kt)("inlineCode",{parentName:"p"},"时间戳"),"混合盐算法一起生成"))),(0,p.kt)("blockquote",null,(0,p.kt)("p",{parentName:"blockquote"},"既然聊到了 cookie 的大小, 另外两个相关的")),(0,p.kt)("h3",null,"渲染机制类"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},"什么是 DOCTYPE 及作用")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},"浏览器解析和渲染过程")),(0,p.kt)("li",{parentName:"ul"},(0,p.kt)("p",{parentName:"li"},"重排 Reflow"))),(0,p.kt)("pre",null,(0,p.kt)("code",o({parentName:"pre"},{}),"1.增减 dom 元素\n2.元素的位置发生移动\n3.元素尺寸(外间距、内间距、长宽)发生改变\n4.浏览器的窗口大小改变\n")),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"重绘 Repaint")),(0,p.kt)("pre",null,(0,p.kt)("code",o({parentName:"pre"},{}),"1.重排必然会导致重绘\n2.重绘不一定重排, 比如元素的颜色发生变化, 只会发生重绘\n")),(0,p.kt)("h3",null,"运行机制类"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"如何理解 JS 的单线程")),(0,p.kt)("p",null,"没办法同时做两件事情"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"什么是 Event Loop")),(0,p.kt)("h3",null,"页面性能类"),(0,p.kt)("ul",null,(0,p.kt)("li",{parentName:"ul"},"提升页面性能的方法有哪些")))}m.isMDXComponent=!0}}]);