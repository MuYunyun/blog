(self.webpackChunkblog=self.webpackChunkblog||[]).push([[107],{107:(n,t,e)=>{"use strict";e.r(t),e.d(t,{default:()=>u});var a=e(59713),i=e.n(a),l=e(6479),o=e.n(l),r=(e(67294),e(3905));function p(n,t){var e=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),e.push.apply(e,a)}return e}function m(n){for(var t=1;t<arguments.length;t++){var e=null!=arguments[t]?arguments[t]:{};t%2?p(Object(e),!0).forEach((function(t){i()(n,t,e[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(e)):p(Object(e)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(e,t))}))}return n}var s={};function u(n){var t=n.components,e=o()(n,["components"]);return(0,r.kt)("wrapper",m(m(m({},s),e),{},{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"本文介绍和动画相关的两个属性。"),(0,r.kt)("h3",null,"transition(过渡)"),(0,r.kt)("p",null,"描述一个属性由一个状态过渡到另外一个状态;"),(0,r.kt)("pre",null,(0,r.kt)("code",m({parentName:"pre"},{className:"language-css"}),".trantion-thing {\n  transition: color 2s 100ms;\n}\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"次数: 执行一次;"),(0,r.kt)("li",{parentName:"ul"},"粒度: 可以对多个属性生效;"),(0,r.kt)("li",{parentName:"ul"},"兼容: 即时动画不生效也不影响动作的终始状态;")),(0,r.kt)("pre",null,(0,r.kt)("code",m({parentName:"pre"},{className:"language-scss"}),".transtion-thing {\n  transition:\n    $props\n    $duration\n    $timing-function (optional)\n    $transition-delay (optional)\n}\n")),(0,r.kt)("h3",null,"animation(动画)"),(0,r.kt)("p",null,"相比 ",(0,r.kt)("inlineCode",{parentName:"p"},"transition"),", animation 比 transition 多了个执行次数的属性;"),(0,r.kt)("pre",null,(0,r.kt)("code",m({parentName:"pre"},{className:"language-css"}),".animated-thing {\n  animation: black-to-white 1s linear 1;\n}\n\n@keyframes black-to-white {\n  0% { background: #000; }\n  100% { background: #fff; }\n}\n")),(0,r.kt)("p",null,"注意 animation 最后的一个数字 1, 其表示执行次数, 如果不传该值, 默认为 1。来看下 animation 的几个属性"),(0,r.kt)("pre",null,(0,r.kt)("code",m({parentName:"pre"},{className:"language-scss"}),".animated-thing {\n  animation:\n    $name                       (相比 transition 独有)\n    $duration\n    $timing-function (optional)\n    $animation-delay (optional)\n    $iteration-count (optional) (相比 transition 独有)\n}\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"动画 ",(0,r.kt)("inlineCode",{parentName:"li"},"animation"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"调用动画: ",(0,r.kt)("inlineCode",{parentName:"li"},"animation:name")," 要与 @keyframes 连用;"),(0,r.kt)("li",{parentName:"ul"},"设置动画播放时间: ",(0,r.kt)("inlineCode",{parentName:"li"},"animation-duration: 2s"),"   完成从 0% 到 100% 一次动画所需时间;"),(0,r.kt)("li",{parentName:"ul"},"设置动画播放方式: ",(0,r.kt)("inlineCode",{parentName:"li"},"animation-timing-function"),"。",(0,r.kt)("inlineCode",{parentName:"li"},"step()")," 逐帧效果; 此外还有 ",(0,r.kt)("inlineCode",{parentName:"li"},"linear"),"、",(0,r.kt)("inlineCode",{parentName:"li"},"ease")," 等线性效果, 也可以使用 ",(0,r.kt)("inlineCode",{parentName:"li"},"cubic-bezier"),"; (记忆方法: 可将 ease 理解成 slow, slow in 就是减速, slow out 就是加速;)"),(0,r.kt)("li",{parentName:"ul"},"设置动画开始播放的时间: ",(0,r.kt)("inlineCode",{parentName:"li"},"animation-delay"),";"),(0,r.kt)("li",{parentName:"ul"},"设置动画播放次数: ",(0,r.kt)("inlineCode",{parentName:"li"},"animation-iteration-count"),": infinate(无限次);"),(0,r.kt)("li",{parentName:"ul"},"设置动画播放方向: ",(0,r.kt)("inlineCode",{parentName:"li"},"animation-direction"),": normal(默认)、alternate (偶数次反方向播放);"),(0,r.kt)("li",{parentName:"ul"},"设置动画的播放状态: ",(0,r.kt)("inlineCode",{parentName:"li"},"animation-play-state"),": running(默认)、paused(暂停效果); 借由该属性可以完成鼠标移动移出时的暂停、播放效果;"),(0,r.kt)("li",{parentName:"ul"},"设置动画时间外属性: ",(0,r.kt)("inlineCode",{parentName:"li"},"animation-fill-mode"),": none/forwards/backwords/both;")))),(0,r.kt)("p",null,(0,r.kt)("a",m({parentName:"p"},{href:"https://codepen.io/MuYunyun/pen/ZEzxBYb"}),"行走的猫")),(0,r.kt)("h3",null,"when to use Transition or Animation"),(0,r.kt)("p",null,"现阶段理解: ",(0,r.kt)("inlineCode",{parentName:"p"},"Animation")," 的可控粒度比 ",(0,r.kt)("inlineCode",{parentName:"p"},"Transition")," 更为细致, transition 可以实现的效果 animation 都能实现。然后有以下几种动效必须使用 animation。"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"需重复执行的动画;"),(0,r.kt)("li",{parentName:"ol"},"需要改变方向的动画;"),(0,r.kt)("li",{parentName:"ol"},"需要暂停/继续执行的动画;")),(0,r.kt)("h3",null,"一些案例"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"缓动效果: ",(0,r.kt)("a",m({parentName:"li"},{href:"https://codepen.io/MuYunyun/pen/EMmNZN"}),"小球落地"),": 涉及到弹框效果的动画, 可以参考此节;"),(0,r.kt)("li",{parentName:"ul"},"打字效果: 如果是",(0,r.kt)("inlineCode",{parentName:"li"},"单行的打字效果"),"可以使用 css 进行实现, 思路借助 ",(0,r.kt)("inlineCode",{parentName:"li"},"animaition")," 的 ",(0,r.kt)("inlineCode",{parentName:"li"},"step")," 以及文本的宽度;")),(0,r.kt)("h3",null,"缓动算法"),(0,r.kt)("ul",m({},{className:"contains-task-list"}),(0,r.kt)("li",m({parentName:"ul"},{className:"task-list-item"}),(0,r.kt)("input",m({parentName:"li"},{type:"checkbox",checked:!1,disabled:!0}))," ",(0,r.kt)("a",m({parentName:"li"},{href:"https://www.zhangxinxu.com/wordpress/2017/01/share-a-animation-algorithm-js/"}),"缓动算法"),", 有时间进行 read。")),(0,r.kt)("h3",null,"transition 属性使用坑点"),(0,r.kt)("p",null,"在变化前后的两个位置上, 改变布局相关属性会使动画失效。比如 ",(0,r.kt)("inlineCode",{parentName:"p"},"display、text-align"),"。"))}u.isMDXComponent=!0}}]);