(self.webpackChunkblog=self.webpackChunkblog||[]).push([[4015],{74015:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>i});var r=n(59713),l=n.n(r),o=n(6479),s=n.n(o),a=(n(67294),n(3905));function p(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?p(Object(n),!0).forEach((function(t){l()(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}var u={};function i(e){var t=e.components,n=s()(e,["components"]);return(0,a.kt)("wrapper",c(c(c({},u),n),{},{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h3",null,"箭头函数中的 this"),(0,a.kt)("p",null,"理解下箭头函数中 this 的本质, 看如下代码:"),(0,a.kt)("pre",null,(0,a.kt)("code",c({parentName:"pre"},{className:"language-js"}),"() => console.log(this)\n")),(0,a.kt)("p",null,"经过 babel 转化后的 ES5 代码如下"),(0,a.kt)("pre",null,(0,a.kt)("code",c({parentName:"pre"},{className:"language-js"}),"var self = this\n(function () {\n  console.log(self)\n})\n")),(0,a.kt)("p",null,"结论: 箭头函数中 this 的值等同于箭头函数当前所处作用域下的 this。"),(0,a.kt)("h4",null,"箭头函数的一些不易理解场景"),(0,a.kt)("p",null,"有如下 html 代码,"),(0,a.kt)("pre",null,(0,a.kt)("code",c({parentName:"pre"},{className:"language-html"}),"<body>\n  <input />\n</body>\n")),(0,a.kt)("p",null,"加上如下 JavaScript 脚本测试 this 指向:"),(0,a.kt)("pre",null,(0,a.kt)("code",c({parentName:"pre"},{className:"language-js"}),"var inputTest = document.getElementsByTagName('input')\ninputTest[0].addEventListener('click', function() {\n  console.log(this) // 指向 input\n})\n\ninputTest[0].addEventListener('click', () => {\n  console.log(this) // window\n})\n")),(0,a.kt)("p",null,"上述这段是为 dom 节点绑定事件的常见写法, 但是 this 指向就很奇怪了, ES5 中指向了 ",(0,a.kt)("inlineCode",{parentName:"p"},"<input />"),", ES6 中却指向了 window。至于原因, 其实是回调函数引起的坑(得看浏览器触发事件时的代码)。再加上箭头函数的特殊性所以产生以上迷惑的代码片段。"),(0,a.kt)("h3",null,"箭头函数小 tip"),(0,a.kt)("p",null,"当箭头函数返回的结果是对象时, 注意下写法的细节:"),(0,a.kt)("pre",null,(0,a.kt)("code",c({parentName:"pre"},{className:"language-js"}),"const result1 = () => ({ a: 1 })\n\nconst result2 = () => { return { a: 1 } }\n")))}i.isMDXComponent=!0}}]);