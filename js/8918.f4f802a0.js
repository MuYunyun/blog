(self.webpackChunkblog=self.webpackChunkblog||[]).push([[8918],{48918:n=>{n.exports="### IoC 模式\n\nIoC(Inversion of Control) 译为控制反转, 它包括依赖注入(Dependency Injection) 和依赖查询(Dependency Lookup)。是面向对象编程的一种设计模式。\n\n> 控制反转指的是将实例化的过程放到了类外部的容器中进行, 在各个类里通过引用相应的类名（依赖查询）调用所需要的类。\n\n> 在 [解读 IoC 框架 InversifyJS](https://github.com/MuYunyun/blog/blob/master/BasicSkill/%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E7%AF%87/%E8%A7%A3%E8%AF%BBIoC%E6%A1%86%E6%9E%B6InversifyJS.md) 这篇文章中更加深入地探讨了 IoC 模式在实际项目中的运用。"}}]);