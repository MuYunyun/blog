(self.webpackChunkblog=self.webpackChunkblog||[]).push([[6064],{16064:n=>{n.exports="### 前端实时协议\n\n* `websocket`\n* `poll`(轮询)\n* `long-poll`(长轮询): 场景: 移动端扫 pc 端二维码, 从而 pc 端完成登入\n\n`long-poll` 的含义就是设定一定的超时时间进行挂起, 在这个时间范围内如果收到服务端的返回信息则发给客户端响应报文, 若超过这时间没有服务端的返回信息则再次发起 `long-poll`\n\n### hybride 的通信\n\n#### 在 web 中调用 native\n\n1. `Native` 先注册 `Schema` 协议的 URL。在 app 的 JS 代码中请求该 URL 就能调用相应 Schema 中的原生方法\n2. `addJavaScriptInterface`: 这个是针对 android 的, 使用这个 api 添加的方法就能在 app 的 JS 代码里进行调用;\n\n#### 在 native 中调用 JS\n\n1. `loadUrl`"}}]);