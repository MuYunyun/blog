(self.webpackChunkblog=self.webpackChunkblog||[]).push([[9775],{69775:n=>{n.exports="### 90.Subsets II\n\nGiven a collection of integers that `might contain duplicates nums`, return all possible subsets (the power set).\n\nNote: The solution set must not contain duplicate subsets.\n\nExample:\n\nInput: [1,2,2]\nOutput:\n[\n  [2],\n  [1],\n  [1,2,2],\n  [2,2],\n  [1,2],\n  []\n]\n\n### Analyze\n\n回溯法解`组合问题`。\n\n* 1\n* 1\n  * 2\n* 1\n  * 2\n    * 2\n* 2\n* 2\n  * 2\n\n```js\n/**\n * @param {number[]} nums\n * @return {number[][]}\n */\nvar subsetsWithDup = function(nums) {\n  const result = []\n  const sortedNums = nums.sort((r1, r2) => r1 - r2)\n  iterator(sortedNums, 0, [], result)\n  return result\n};\n\nvar iterator = function(nums, start, temp, result) {\n  result.push([...temp])\n\n  for (let i = start; i < nums.length; i++) {\n    if (nums[i] === nums[i - 1] && i !== start) { continue }\n    temp.push(nums[i])\n    iterator(nums, i + 1, temp, result)\n    temp.pop(nums[i])\n  }\n}\n```"}}]);