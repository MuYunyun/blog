(self.webpackChunkblog=self.webpackChunkblog||[]).push([[3691],{3691:n=>{n.exports="### title\n\n给定一个排序数组和一个目标值, 在数组中找到目标值, 并返回其索引。如果目标值不存在于数组中, 返回它将会被按顺序插入的位置。\n\n你可以假设数组中无重复元素。\n\n示例 1:\n\n```\n输入: [1,3,5,6], 5\n输出: 2\n```\n\n示例 2:\n\n```\n输入: [1,3,5,6], 2\n输出: 1\n```\n\n示例 3:\n\n```\n输入: [1,3,5,6], 7\n输出: 4\n```\n\n示例 4:\n\n```\n输入: [1,3,5,6], 0\n输出: 0\n```\n\n### analyze\n\n水题\n\n```js\n/**\n * @param {number[]} nums\n * @param {number} target\n * @return {number}\n */\nvar searchInsert = function (nums, target) {\n  let i = 0\n  while (i < nums.length) {\n    if (target <= nums[i]) {\n      return i\n    }\n\n    if (target > nums[nums.length - 1]) {\n      return nums.length\n    }\n    i++\n  }\n};\n```"}}]);