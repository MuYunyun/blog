(self.webpackChunkblog=self.webpackChunkblog||[]).push([[9660],{79660:n=>{n.exports="### 适配者模式\n\n适配者模式: 主要用于解决两个接口之间不匹配的问题。\n\n### demo\n\n```js\n// 老接口\nconst zhejiangCityOld = (function() {\n  return [\n    {\n      name: 'hangzhou',\n      id: 11,\n    },\n    {\n      name: 'jinhua',\n      id: 12\n    }\n  ]\n}())\n\nconsole.log(getZhejiangCityOld())\n\n// 新接口希望是下面形式\n{\n  hangzhou: 11,\n  jinhua: 12,\n}\n\n// 这时候就可采用适配者模式\nconst adaptor = (function(oldCity) {\n  const obj = {}\n  for (let city of zhejiangCityOld) {\n    obj[city.name] = city.id\n  }\n  return obj\n}())\n```\n"}}]);