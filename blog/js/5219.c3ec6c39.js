(self.webpackChunkblog=self.webpackChunkblog||[]).push([[5219],{45219:n=>{n.exports='### 前置准备\n\n本系列文章在实现 cpreact 的同时理顺 React 框架的核心内容(JSX/虚拟 DOM/组件/生命周期/diff 算法/setState/PureComponent/HOC/onChange 事件) [项目地址](https://github.com/MuYunyun/cpreact)\n\n### 环境准备\n\n首先安装以下 babel 模块, 其具体作用会在后文 [JSX 和 虚拟 DOM](https://github.com/MuYunyun/blog/blob/master/从0到1实现React/1.JSX和虚拟DOM.md) 中提及。\n\n> 扩展延伸: [babel 执行机制](https://github.com/MuYunyun/blog/blob/master/BasicSkill/番外篇/babel执行机制.md)\n\n```js\n"@babel/core": "^7.0.0",\n"@babel/preset-env": "^7.0.0",\n"@babel/preset-react": "^7.0.0",\n"babel-loader": "v8.0.0-beta.0",\n```\n\n同时 `.babelrc` 配置如下:\n\n```js\n{\n  "presets": [\n    [\n      "@babel/preset-env",\n      {\n        "targets": "> 0.25%, not dead",\n        "useBuiltIns": "entry"\n      }\n    ],\n    [\n      "@babel/preset-react", {\n        "pragma": "cpreact.createElement" // 该参数传向 transform-react-jsx 插件, 是前置的一个核心, 后文有解释为什么使用 cpreact.createElement\n      }\n    ]\n  ]\n}\n```\n\n\n配置好 babel 后, 接着提供两套打包工具的配置方案, 读者可以自行选择。\n\n#### 方案 1: 使用 webpack\n\nwebpack 拥有一个活跃的社区, 提供了更为丰富的打包能力。\n\n首先安装以下模块:\n\n```\n"webpack": "^4.17.2",\n"webpack-cli": "^3.1.0",\n"webpack-dev-server": "^3.1.8"\n```\n\n在根目录的 `webpack.config.js` 配置如下:\n\n```js\nconst webpack = require(\'webpack\')\nconst path = require(\'path\')\nconst rootPath = path.resolve(__dirname)\n\nmodule.exports = {\n  entry: path.resolve(rootPath, \'test\', \'index.js\'),\n  mode: \'development\',\n  devtool: \'inline-source-map\',\n  devServer: {\n    contentBase: \'./dist\'\n  },\n  output: {\n    filename: \'cpreact.js\',\n    path: path.resolve(rootPath, \'dist\'),\n    libraryTarget: \'umd\'\n  },\n  module: {\n    rules: [{\n      test: /\\.js$/,\n      loader: "babel-loader",\n    }]\n  },\n}\n```\n\n然后在 `package.json` 里加上如下配置:\n\n```\n"scripts": {\n  "start": "webpack-dev-server --open",\n},\n```\n\n具体可以参照 [0.4.3 版本](https://github.com/MuYunyun/cpreact/blob/master/webpack.config.js)\n\n#### 方案 2: 使用 parcel\n\n[parcel](https://parceljs.org/getting_started.html) 是一款上手极快的打包工具, 使用其可以快速地进入项目开发的状态。在 `package.json` 加上如下配置, 具体可以参照 [0.1 版本](https://github.com/MuYunyun/cpreact/blob/0.1/package.json)\n\n```\n"scripts": {\n  "start": "parcel ./index.html --open -p 8080 --no-cache"\n},\n```'}}]);