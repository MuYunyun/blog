(self.webpackChunkblog=self.webpackChunkblog||[]).push([[8723],{8723:(n,e,t)=>{"use strict";t.r(e),t.d(e,{default:()=>o});var r=t(59713),l=t.n(r),a=t(6479),p=t.n(a),i=(t(67294),t(3905));function u(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function s(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?u(Object(t),!0).forEach((function(e){l()(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):u(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}var m={};function o(n){var e=n.components,t=p()(n,["components"]);return(0,i.kt)("wrapper",s(s(s({},m),t),{},{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h3",null,"279. Perfect Squares"),(0,i.kt)("p",null,"Given a positive integer n, find ",(0,i.kt)("inlineCode",{parentName:"p"},"the least number")," of perfect square numbers (for example, 1, 4, 9, 16, ...) which sum to n."),(0,i.kt)("p",null,"Example 1:"),(0,i.kt)("pre",null,(0,i.kt)("code",s({parentName:"pre"},{className:"language-js"}),"Input: n = 12\nOutput: 3\nExplanation: 12 = 4 + 4 + 4\n")),(0,i.kt)("p",null,"Example 2:"),(0,i.kt)("pre",null,(0,i.kt)("code",s({parentName:"pre"},{className:"language-js"}),"Input: n = 13\nOutput: 2\nExplanation: 13 = 4 + 9.\n")),(0,i.kt)("h3",null,"Analyze"),(0,i.kt)("p",null,"题目转化: 数字 n 到 0 最少能由几个平方数相加得到?"),(0,i.kt)("p",null,"首先思考能否使用贪心算法, 比如针对数字 12, 使用贪心算法先取能使用最大的数字 9, 结果为 9 1 1 1, 长度为 4; 但其实是有更短长度的答案 4 4 4 的, 因此不能使用贪心算法。"),(0,i.kt)("p",null,"建模: 构建树的数据结构:"),(0,i.kt)("p",null,(0,i.kt)("img",s({parentName:"p"},{src:"http://with.muyunyun.cn/1ec5a5a75516e0ae7fa96c9c9a74bd79.jpg",alt:null}))),(0,i.kt)("p",null,"比如数字 5 到 0 的路径可以是"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"5 -> 1 -> 0"),";"),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"5 -> 4 -> 0"),";"),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("inlineCode",{parentName:"li"},"5 -> 4 -> 3 -> 2 -> 1 -> 0"),";")),(0,i.kt)("pre",null,(0,i.kt)("code",s({parentName:"pre"},{className:"language-js"}),"/**\n * @param {number} n\n * @return {number}\n */\nvar numSquares = function(n) {\n  const list = []\n  list.push({ num: n, step: 0 })\n\n  while (list.length > 0) {\n    const { num, step } = list.shift()\n    if (num === 0) return step\n    for (let i = 1; num - i * i >= 0; i++) {\n      list.push({ num: num - i * i, step: step + 1 })\n    }\n  }\n}\n")),(0,i.kt)("p",null,"此时提交代码, 运行超时。"),(0,i.kt)("p",null,"进行分析, 以从 5 到达 1 为例, 有如下方式 ①: ",(0,i.kt)("inlineCode",{parentName:"p"},"5 -> 1"),"; ②: ",(0,i.kt)("inlineCode",{parentName:"p"},"5 -> 4 -> 3 -> 2 -> 1"),"; 显然不会采用第二种方式, 因此可以省略步骤二访问 1 的操作的。"),(0,i.kt)("p",null,"使用",(0,i.kt)("inlineCode",{parentName:"p"},"树的数据结构"),"时, 到达一个节点的路径是",(0,i.kt)("inlineCode",{parentName:"p"},"唯一确定"),"的, 与之相对地在使用",(0,i.kt)("inlineCode",{parentName:"p"},"图的数据结构"),"时, 到达一个节点的方式可能",(0,i.kt)("inlineCode",{parentName:"p"},"会存在多个路径"),"; 为此引入 visitedObj 来存储该节点是否已经访问过, 改进代码如下:"),(0,i.kt)("pre",null,(0,i.kt)("code",s({parentName:"pre"},{className:"language-js"}),"/**\n * @param {number} n\n * @return {number}\n */\nvar numSquares = function(n) {\n  const list = []\n  list.push({ num: n, step: 0 })\n  const visitedObj = { [n]: true }\n  while (list.length > 0) {\n    const { num, step, visited } = list.shift()\n    for (let i = 1;; i++) {\n      const extraNum = num - i * i\n      if (extraNum < 0) break\n      // this line return the result in advance, it reduces perform time very much.\n      if (extraNum === 0) return step + 1\n      if (!visitedObj[extraNum]) {\n        visitedObj[extraNum] = true\n        list.push({ num: num - i * i, step: step + 1 })\n      }\n    }\n  }\n}\n")),(0,i.kt)("p",null,(0,i.kt)("img",s({parentName:"p"},{src:"http://with.muyunyun.cn/05fe8335c7c57360edd7e9d28fe3a102.jpg",alt:null}))),(0,i.kt)("h3",null,"Similar Title"),(0,i.kt)("p",null,"127、126"))}o.isMDXComponent=!0}}]);