(self.webpackChunkblog=self.webpackChunkblog||[]).push([[4609],{4609:n=>{n.exports='### 题目: 反转字符串中的元音字母\n\n编写一个函数，以字符串作为输入，反转该字符串中的元音字母。\n\n示例 1:\n\n```js\n输入: "hello"\n输出: "holle"\n```\n\n示例 2:\n\n```js\n输入: "leetcode"\n输出: "leotcede"\n```\n\n说明:\n元音字母不包含字母"y"。\n\n### 解题\n\n双指针法:\n\n```js\n/**\n * @param {string} s\n * @return {string}\n */\nvar reverseVowels = function(s) {\n  let left = 0, right = s.length - 1\n  let result = s\n  while (left <= right) {\n    const isValidateLeft = isValidate(s[left])\n    const isValidateRight = isValidate(s[right])\n    if (isValidateLeft && isValidateRight) {\n      result = swap(result, left, right)\n      left++\n      right--\n    }\n    if (!isValidateLeft) {\n      left++\n    }\n    if (!isValidateRight) {\n      right--\n    }\n  }\n  return result\n}\n\nvar isValidate = (value) => {\n  return /a|e|i|o|u|A|E|I|O|U/.test(value)\n}\n\n/* 交换位置\n  a, b 为下标\n*/\nvar swap = function(str, a, b) {\n  const arr = str.split(\'\')\n  const tmp = arr[a]\n  arr[a] = arr[b]\n  arr[b] = tmp\n  return arr.join(\'\')\n}\n```\n\n### Sister Title\n\n125、167、344'}}]);