(self.webpackChunkblog=self.webpackChunkblog||[]).push([[2502],{12502:n=>{n.exports="### 62. Unique Paths\n\nA robot is located at the top-left corner of a m x n grid (marked 'Start' in the diagram below).\n\nThe robot can only move either `down or right` at any point in time. The robot is trying to reach the bottom-right corner of the grid (marked 'Finish' in the diagram below).\n\nHow many possible unique paths are there?\n\nExample 1:\n\n![](https://assets.leetcode.com/uploads/2018/10/22/robot_maze.png)\n\n```js\nInput: m = 3, n = 7\nOutput: 28\n```\n\nExample 2:\n\n```js\nInput: m = 3, n = 2\nOutput: 3\n```\n\nExplanation:\nFrom the top-left corner, there are a total of 3 ways to reach the bottom-right corner:\n1. Right -> Down -> Down\n2. Down -> Down -> Right\n3. Down -> Right -> Down\n\nExample 3:\n\n```js\nInput: m = 7, n = 3\nOutput: 28\n```\n\nExample 4:\n\n```js\nInput: m = 3, n = 3\nOutput: 6\n```\n\n* Constraints:\n  * 1 <= m, n <= 100\n  * It's guaranteed that the answer will be less than or equal to 2 * 109.\n\n### Analyze\n\n记忆递归法:\n\n```js\nconst cache = {}\n/**\n * @param {number} m\n * @param {number} n\n * @return {number}\n */\nvar uniquePaths = function (m, n) {\n  if (m === 1 || n === 1) {\n    return 1\n  }\n\n  if (cache[`${m}~${n}`]) {\n    return cache[`${m}~${n}`]\n  } else {\n    const nums = uniquePaths(m - 1, n) + uniquePaths(m, n - 1)\n    cache[`${m}~${n}`] = nums\n\n    return nums\n  }\n}\n```\n\n动态规划法:\n\n```js\n/**\n * @param {number} m\n * @param {number} n\n * @return {number}\n */\nvar uniquePaths = function(m, n) {\n  const cache = {\n    [`${m - 1}_${n - 1}`]: 1\n  }\n  for (let x = m - 1; x >= 0; x--) {\n    for (let y = n - 1; y >= 0; y--) {\n      if (x === m - 1 && y === n - 1) {\n        continue\n      }\n      if (y + 1 === n) {\n        cache[`${x}_${y}`] = cache[`${x + 1}_${y}`]\n      } else if (x + 1 === m) {\n        cache[`${x}_${y}`] = cache[`${x}_${y + 1}`]\n      } else {\n        cache[`${x}_${y}`] = cache[`${x}_${y + 1}`] + cache[`${x + 1}_${y}`]\n      }\n    }\n  }\n  return cache['0_0']\n}\n```\n\n### Similar Title\n\n63"}}]);