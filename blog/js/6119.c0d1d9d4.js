(self.webpackChunkblog=self.webpackChunkblog||[]).push([[6119],{6119:e=>{e.exports="* React 的组件名为什么要大写？\n\n```\n在 `render` 中, 小写会被认为是 `html` 元素\n```\n\n* 你会把向 API 的数据请求放在哪里执行\n\n```\n视情况考虑:\n\n* componentDidMount, 可能会导致白屏\n* constructor, 针对数据不变的情况\n```\n\n* 虚拟 dom 中有个 `$$typeof` 字段，有了解过它的作用么？\n\n运用 `JSON` 里会无视 `Symbol` 的知识点来完成安全性校验。可以参阅 [Why Do React Elements Have a $$typeof Property?](https://overreacted.io/why-do-react-elements-have-typeof-property/)\n\n* 如何理解 `useEffect` 中的副作用\n\n```\n操作 dom, 获取数据，会影响其它组件或者在渲染时没有办法做其它操作, 这是目前所理解的副作用。\n```\n\n* 组件为什么写成 `<Form />` 而不是 `Form()`\n\n结合编译时能做更多事情\n\n* `React.memo()` 和 `useMemo()` 的区别\n\n`useMemo()` 的粒度比 `React.memo()` 更细\n\n* 什么时候使用 setState((state, props) => stateChange) 而不用 setState({})\n\n点击一个按钮, 连续使用 setState 进行三次的增加, 如果使用 setState({}) 会造成 state 的合并, 使用 setState((state, props) => stateChange) 没有这个问题。\n\n> [react-as-a-ui-runtime](https://overreacted.io/react-as-a-ui-runtime/)\n\n* How to judge if the react element is Fragment?\n\n```js\n/**\n * judege if is React Fragment.\n */\nfunction isReactFragment(variableToInspect) {\n  if (variableToInspect.type) {\n    return variableToInspect.type === React.Fragment;\n  }\n  return variableToInspect === React.Fragment;\n}\n```"}}]);