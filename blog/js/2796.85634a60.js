(self.webpackChunkblog=self.webpackChunkblog||[]).push([[2796],{52796:n=>{n.exports="### Swap Nodes in Pairs\n\nGiven a linked list, swap every two adjacent nodes and return its head.\n\nYou may not modify the values in the list's nodes, only nodes itself may be changed.\n\nExample:\n\n```js\nGiven 1->2->3->4, you should return the list as 2->1->4->3.\n```\n\n### analyze\n\n```js\nprev  first  second  next\n        1  ->  2  ->  3  ->  4 -> null\n              .\n              .\n进行如下指针变换:\nprev -> second -> first -> next\n          2    ->   1   ->  3  ->  4 -> null\n              .\n              .\n移动指针:\n                   prev   first  second  next\n          2    ->   1   ->  3  ->  4 -> null\n              .\n              .\n重复上述操作\n```\n\n```js\n/**\n * Definition for singly-linked list.\n * function ListNode(val) {\n *     this.val = val;\n *     this.next = null;\n * }\n */\n/**\n * @param {ListNode} head\n * @return {ListNode}\n */\nvar swapPairs = function(head) {\n  const dummyHead = new ListNode(0)\n  dummyHead.next = head\n\n  let prev = dummyHead\n  let first = prev.next\n\n  while(first && first.next) {\n    let second = first.next\n    let next = second.next\n\n    second.next = first\n    first.next = next\n    prev.next = second\n\n    prev = first\n    first = first.next\n  }\n\n  return dummyHead.next\n}\n```\n"}}]);