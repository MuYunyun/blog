(self.webpackChunkblog=self.webpackChunkblog||[]).push([[1221],{1221:n=>{n.exports="### 前端项目中的 global 对象\n\nwebpack 项目中是能使用 global 的。\n\n```js\n(function(global) {\n\n})(window)\n```\n\n### 浏览器竟然存在 global\n\n开发/测试环境有 global 对象, 线上环境没有 global 对象, 应该是 core.js 这个库的版本不一致造成的。\n\n在 `batman/node_modules/core-js/modules/_redefine.js` 这个包里进行了 `window.global` 的赋值操作。\n\n### 项目中枚举值前端自己维护的原因\n\n枚举是根据后端的注释所生成的, 如果后端注释写错或者没有写注释, javadoc 就生成不了。\n\n### Content-Type\n\n这个部分的知识对使用 postman 很有帮助。\n\nContent-Type: application/json      会将相应类型传到网关\nContent-Type: x-www-form-urlencoded 所有类型都以字符串的形式传到网关\n\n### 痛点\n\n- [ ] 结合 vscode 插件定制模板, 快速插入"}}]);