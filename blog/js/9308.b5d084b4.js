(self.webpackChunkblog=self.webpackChunkblog||[]).push([[9308],{39308:e=>{e.exports="### 404. Sum of Left Leaves\n\nFind the sum of all left leaves in a given binary tree.\n\nExample:\n\n```js\n    3\n   / \\\n  9  20\n    /  \\\n   15   7\n```\n\nThere are two left leaves in the binary tree, with values 9 and 15 respectively. Return 24.\n\n### Analyze\n\n递归思路解题\n\n```js\n/**\n * Definition for a binary tree node.\n * function TreeNode(val) {\n *     this.val = val;\n *     this.left = this.right = null;\n * }\n */\n/**\n * @param {TreeNode} root\n * @return {number}\n */\nvar sumOfLeftLeaves = function(root) {\n  if (!root) return 0\n  if (root.left) {\n    if (!root.left.left && !root.left.right) {\n      return root.left.val + sumOfLeftLeaves(root.right)\n    } else {\n      return sumOfLeftLeaves(root.left) + sumOfLeftLeaves(root.right)\n    }\n  } else {\n    return sumOfLeftLeaves(root.right)\n  }\n};\n```\n"}}]);