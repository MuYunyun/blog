(self.webpackChunkblog=self.webpackChunkblog||[]).push([[5770],{85770:n=>{n.exports="### 快速排序思想\n\n1. 找到一个基准点;\n2. 比该基准点值小的值移到其左侧, 比该基准点大的值移到其右侧;\n3. 遍历左侧的值和右侧的值, 重复上述 1, 2 操作;\n\n### 代码实现\n\n```js\nfunction quickSort(arr) {\n  if (arr.length === 0) {\n    return []\n  }\n  const basicValue = arr[Math.floor((arr.length - 1) / 2)] // 随意取, 这里取中间\n  const left = []\n  const right = []\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] < basicValue) {\n      left.push(arr[i])\n    }\n    if (arr[i] > basicValue) {\n      right.push(arr[i])\n    }\n  }\n  return quickSort(left).concat(basicValue, quickSort(right))\n}\n```\n\n### 求快速排序时间复杂度\n\n先记住 O(NlogN), [具体证明](https://www.zhihu.com/question/22393997), someday to understand, o(╯□╰)o"}}]);